[
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.repositories",
        "obj": "CommonRepository.fetch_all",
        "line": 69,
        "column": 4,
        "path": "fastapi_webserver\\core\\app\\repositories.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (65/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.repositories",
        "obj": "CommonRepository.paginate_fetch",
        "line": 321,
        "column": 4,
        "path": "fastapi_webserver\\core\\app\\repositories.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (54/50)",
        "message-id": "R0915"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.schemas",
        "obj": "",
        "line": 3,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\schemas.py",
        "symbol": "no-name-in-module",
        "message": "No name 'BaseModel' in module 'pydantic'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.cloud_master",
        "obj": "",
        "line": 15,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\cloud_master.py",
        "symbol": "no-name-in-module",
        "message": "No name 'schemas' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.cloud_master",
        "obj": "",
        "line": 16,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\cloud_master.py",
        "symbol": "no-name-in-module",
        "message": "No name 'services' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.cloud_master",
        "obj": "",
        "line": 17,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\cloud_master.py",
        "symbol": "no-name-in-module",
        "message": "No name 'core' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.cloud_master",
        "obj": "fetch_apimeta",
        "line": 121,
        "column": 22,
        "path": "fastapi_webserver\\core\\app\\api\\cloud_master.py",
        "symbol": "redefined-argument-from-local",
        "message": "Redefining argument with the local name 'session'",
        "message-id": "R1704"
    },
    {
        "type": "warning",
        "module": "fastapi_webserver.core.app.api.cloud_master",
        "obj": "hit",
        "line": 149,
        "column": 15,
        "path": "fastapi_webserver\\core\\app\\api\\cloud_master.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "fastapi_webserver.core.app.api.cloud_master",
        "obj": "hit",
        "line": 152,
        "column": 15,
        "path": "fastapi_webserver\\core\\app\\api\\cloud_master.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "convention",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (3593/1000)",
        "message-id": "C0302"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "",
        "line": 15,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'schemas' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "",
        "line": 16,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'core' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "",
        "line": 17,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'services' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "",
        "line": 26,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'services' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_details",
        "line": 215,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_details",
        "line": 242,
        "column": 15,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with \"in\" to \"name in ('code', 'plan')\"",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_details",
        "line": 228,
        "column": 4,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_details",
        "line": 215,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (58/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_all_details",
        "line": 310,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_states",
        "line": 431,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_states",
        "line": 463,
        "column": 12,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_states",
        "line": 443,
        "column": 4,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_states",
        "line": 431,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (70/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "delete_plan",
        "line": 1054,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_plan",
        "line": 1153,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_plan",
        "line": 1164,
        "column": 4,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_plan",
        "line": 1164,
        "column": 4,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_agent",
        "line": 1485,
        "column": 22,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_agent",
        "line": 1508,
        "column": 26,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_agent",
        "line": 1468,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (52/50)",
        "message-id": "R0915"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_request_dashboard",
        "line": 1549,
        "column": 33,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Module 'datetime' has no 'now' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_request_dashboard",
        "line": 1558,
        "column": 52,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Module 'datetime' has no 'strptime' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_request_dashboard",
        "line": 1560,
        "column": 50,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Module 'datetime' has no 'strptime' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_insights",
        "line": 1580,
        "column": 33,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Module 'datetime' has no 'now' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_insights",
        "line": 1589,
        "column": 52,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Module 'datetime' has no 'strptime' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_insights",
        "line": 1591,
        "column": 50,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Module 'datetime' has no 'strptime' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_task",
        "line": 1746,
        "column": 23,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'query' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_task",
        "line": 1758,
        "column": 31,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'query' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_task",
        "line": 1795,
        "column": 31,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'query' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_task",
        "line": 1802,
        "column": 20,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_task",
        "line": 1819,
        "column": 31,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'query' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_task",
        "line": 1840,
        "column": 31,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'query' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_task",
        "line": 1847,
        "column": 20,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_task",
        "line": 1693,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (129/50)",
        "message-id": "R0915"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_catalouge",
        "line": 1935,
        "column": 23,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'query' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_catalouge",
        "line": 1942,
        "column": 27,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'query' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_config",
        "line": 2039,
        "column": 27,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'query' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "migrate_config",
        "line": 1980,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (59/50)",
        "message-id": "R0915"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "get_queues",
        "line": 2226,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "function-redefined",
        "message": "function already defined line 2108",
        "message-id": "E0102"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "delete_queues",
        "line": 2307,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "function-redefined",
        "message": "function already defined line 2168",
        "message-id": "E0102"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "delete_user",
        "line": 3298,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "function-redefined",
        "message": "function already defined line 3172",
        "message-id": "E0102"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.dashboard_API",
        "obj": "delete_user",
        "line": 3471,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\dashboard_API.py",
        "symbol": "function-redefined",
        "message": "function already defined line 3172",
        "message-id": "E0102"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.infracost",
        "obj": "",
        "line": 15,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\infracost.py",
        "symbol": "no-name-in-module",
        "message": "No name 'core' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.infracost",
        "obj": "",
        "line": 16,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\infracost.py",
        "symbol": "no-name-in-module",
        "message": "No name 'services' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1262/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 173,
        "column": 17,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "fixme",
        "message": "TODO update json encoder and decoder",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 385,
        "column": 17,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "fixme",
        "message": "TODO update json encoder and decoder",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 14,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'schemas' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 15,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'core' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 16,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'handlers' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 17,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'api' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 18,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'services' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "",
        "line": 19,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "no-name-in-module",
        "message": "No name 'utils' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task",
        "line": 91,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task",
        "line": 122,
        "column": 12,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "convention",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task",
        "line": 201,
        "column": 12,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task",
        "line": 225,
        "column": 8,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task",
        "line": 231,
        "column": 12,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "no-else-break",
        "message": "Unnecessary \"elif\" after \"break\"",
        "message-id": "R1723"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task",
        "line": 242,
        "column": 8,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task",
        "line": 91,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (129/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task_rollback",
        "line": 326,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task_rollback",
        "line": 404,
        "column": 8,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task_rollback",
        "line": 406,
        "column": 8,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_or_update_auto_task_rollback",
        "line": 326,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (78/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "resolve_ticket",
        "line": 923,
        "column": 25,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "logging-format-interpolation",
        "message": "Use lazy % or % formatting in logging functions",
        "message-id": "W1202"
    },
    {
        "type": "warning",
        "module": "fastapi_webserver.core.app.api.orchestrator_API",
        "obj": "create_freshservice_assets",
        "line": 1102,
        "column": 21,
        "path": "fastapi_webserver\\core\\app\\api\\orchestrator_API.py",
        "symbol": "logging-format-interpolation",
        "message": "Use lazy % or % formatting in logging functions",
        "message-id": "W1202"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.reports",
        "obj": "",
        "line": 11,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\reports.py",
        "symbol": "no-name-in-module",
        "message": "No name 'schemas' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.reports",
        "obj": "",
        "line": 16,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\reports.py",
        "symbol": "no-name-in-module",
        "message": "No name 'api' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.reports",
        "obj": "",
        "line": 17,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\reports.py",
        "symbol": "no-name-in-module",
        "message": "No name 'core' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.reports",
        "obj": "",
        "line": 24,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\reports.py",
        "symbol": "no-name-in-module",
        "message": "No name 'services' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.sso",
        "obj": "",
        "line": 11,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\sso.py",
        "symbol": "no-name-in-module",
        "message": "No name 'schemas' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.sso",
        "obj": "",
        "line": 16,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\sso.py",
        "symbol": "no-name-in-module",
        "message": "No name 'api' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.sso",
        "obj": "",
        "line": 17,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\sso.py",
        "symbol": "no-name-in-module",
        "message": "No name 'core' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.app.api.sso",
        "obj": "",
        "line": 24,
        "column": 0,
        "path": "fastapi_webserver\\core\\app\\api\\sso.py",
        "symbol": "no-name-in-module",
        "message": "No name 'services' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.container",
        "obj": "",
        "line": 5,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\container.py",
        "symbol": "no-name-in-module",
        "message": "No name 'handlers' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.container",
        "obj": "",
        "line": 6,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\container.py",
        "symbol": "no-name-in-module",
        "message": "No name 'handlers' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.container",
        "obj": "",
        "line": 7,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\container.py",
        "symbol": "no-name-in-module",
        "message": "No name 'utils' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.container",
        "obj": "",
        "line": 9,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\container.py",
        "symbol": "no-name-in-module",
        "message": "No name 'services' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.container",
        "obj": "",
        "line": 10,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\container.py",
        "symbol": "no-name-in-module",
        "message": "No name 'repositories' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.main",
        "obj": "",
        "line": 7,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\main.py",
        "symbol": "no-name-in-module",
        "message": "No name 'api' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.routers",
        "obj": "",
        "line": 3,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\routers.py",
        "symbol": "no-name-in-module",
        "message": "No name 'api' in module 'core.app'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.utils",
        "obj": "",
        "line": 9,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\utils.py",
        "symbol": "no-name-in-module",
        "message": "No name 'fastapi' in module 'opentelemetry.instrumentation'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.utils",
        "obj": "",
        "line": 10,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\utils.py",
        "symbol": "no-name-in-module",
        "message": "No name 'logging' in module 'opentelemetry.instrumentation'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.core.settings.base",
        "obj": "",
        "line": 4,
        "column": 0,
        "path": "fastapi_webserver\\core\\core\\settings\\base.py",
        "symbol": "no-name-in-module",
        "message": "No name 'AnyHttpUrl' in module 'pydantic'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.handlers.jenkins_handler.jenkinservice",
        "obj": "JenkinsService.get_build_info",
        "line": 105,
        "column": 43,
        "path": "fastapi_webserver\\core\\handlers\\jenkins_handler\\jenkinservice.py",
        "symbol": "no-member",
        "message": "Instance of 'JenkinsService' has no 'jobname' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.handlers.jenkins_handler.jenkinservice",
        "obj": "JenkinsService.create_node",
        "line": 119,
        "column": 4,
        "path": "fastapi_webserver\\core\\handlers\\jenkins_handler\\jenkinservice.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.handlers.jenkins_handler.jenkinservice",
        "obj": "JenkinsService.create_node",
        "line": 143,
        "column": 8,
        "path": "fastapi_webserver\\core\\handlers\\jenkins_handler\\jenkinservice.py",
        "symbol": "assignment-from-no-return",
        "message": "Assigning result of a function call, where the function has no return",
        "message-id": "E1111"
    },
    {
        "type": "refactor",
        "module": "fastapi_webserver.core.handlers.jenkins_handler.jenkinservice",
        "obj": "JenkinsService.update_node",
        "line": 150,
        "column": 4,
        "path": "fastapi_webserver\\core\\handlers\\jenkins_handler\\jenkinservice.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "fastapi_webserver.core.handlers.jenkins_handler.jenkinservice",
        "obj": "JenkinsService.update_node",
        "line": 194,
        "column": 8,
        "path": "fastapi_webserver\\core\\handlers\\jenkins_handler\\jenkinservice.py",
        "symbol": "assignment-from-no-return",
        "message": "Assigning result of a function call, where the function has no return",
        "message-id": "E1111"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.commonoperations",
        "obj": "add_audit_log",
        "line": 8,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\commonoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.diskoperations",
        "obj": "add_audit_log",
        "line": 11,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\diskoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.azure.diskoperations",
        "obj": "create_disk",
        "line": 64,
        "column": 8,
        "path": "resource_adapters\\providers\\azure\\diskoperations.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.dnsoperations",
        "obj": "add_audit_log",
        "line": 11,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\dnsoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "",
        "line": 64,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'if' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1220/1000)",
        "message-id": "C0302"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "add_audit_log",
        "line": 12,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "remove_backendpool_from_application_gateway",
        "line": 64,
        "column": 20,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "no-else-continue",
        "message": "Unnecessary \"else\" after \"continue\"",
        "message-id": "R1724"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "delete_loadbalancer",
        "line": 699,
        "column": 11,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "unidiomatic-typecheck",
        "message": "Use isinstance() rather than type() for a typecheck.",
        "message-id": "C0123"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "delete_backend_pool_from_lb",
        "line": 743,
        "column": 11,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "unidiomatic-typecheck",
        "message": "Use isinstance() rather than type() for a typecheck.",
        "message-id": "C0123"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "remove_lb_rule",
        "line": 905,
        "column": 4,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "edit_lb_rule",
        "line": 961,
        "column": 4,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "remove_inboud_nat_from_lb",
        "line": 1037,
        "column": 20,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "no-else-continue",
        "message": "Unnecessary \"else\" after \"continue\"",
        "message-id": "R1724"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.networkoperations",
        "obj": "remove_health_probe_from_lb",
        "line": 1154,
        "column": 20,
        "path": "resource_adapters\\providers\\azure\\networkoperations.py",
        "symbol": "no-else-continue",
        "message": "Unnecessary \"else\" after \"continue\"",
        "message-id": "R1724"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.privatednsoperations",
        "obj": "add_audit_log",
        "line": 11,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\privatednsoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.storageoperations",
        "obj": "add_audit_log",
        "line": 12,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\storageoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.azure.vmoperations",
        "obj": "add_audit_log",
        "line": 12,
        "column": 0,
        "path": "resource_adapters\\providers\\azure\\vmoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.azure.vmoperations",
        "obj": "add_disk",
        "line": 114,
        "column": 12,
        "path": "resource_adapters\\providers\\azure\\vmoperations.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "error",
        "module": "resource_adapters.providers.azure.vmoperations",
        "obj": "change_disk_size",
        "line": 252,
        "column": 8,
        "path": "resource_adapters\\providers\\azure\\vmoperations.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "error",
        "module": "resource_adapters.providers.azure.vmoperations",
        "obj": "change_disk_size",
        "line": 263,
        "column": 12,
        "path": "resource_adapters\\providers\\azure\\vmoperations.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "error",
        "module": "resource_adapters.providers.azure.vmoperations",
        "obj": "add_nic_to_vm",
        "line": 542,
        "column": 16,
        "path": "resource_adapters\\providers\\azure\\vmoperations.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "error",
        "module": "resource_adapters.providers.azure.vmoperations",
        "obj": "remove_nic_from_vm",
        "line": 605,
        "column": 12,
        "path": "resource_adapters\\providers\\azure\\vmoperations.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "error",
        "module": "resource_adapters.providers.gcp.commonoperations",
        "obj": "",
        "line": 4,
        "column": 0,
        "path": "resource_adapters\\providers\\gcp\\commonoperations.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute_v1' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.gcp.commonoperations",
        "obj": "add_audit_log",
        "line": 10,
        "column": 0,
        "path": "resource_adapters\\providers\\gcp\\commonoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "resource_adapters.providers.gcp.diskoperations",
        "obj": "",
        "line": 5,
        "column": 0,
        "path": "resource_adapters\\providers\\gcp\\diskoperations.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute_v1' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.gcp.diskoperations",
        "obj": "add_audit_log",
        "line": 11,
        "column": 0,
        "path": "resource_adapters\\providers\\gcp\\diskoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "resource_adapters.providers.gcp.networkoperations",
        "obj": "",
        "line": 4,
        "column": 0,
        "path": "resource_adapters\\providers\\gcp\\networkoperations.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute_v1' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.gcp.networkoperations",
        "obj": "add_audit_log",
        "line": 9,
        "column": 0,
        "path": "resource_adapters\\providers\\gcp\\networkoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "error",
        "module": "resource_adapters.providers.gcp.vmoperations",
        "obj": "",
        "line": 5,
        "column": 0,
        "path": "resource_adapters\\providers\\gcp\\vmoperations.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute_v1' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.gcp.vmoperations",
        "obj": "add_audit_log",
        "line": 10,
        "column": 0,
        "path": "resource_adapters\\providers\\gcp\\vmoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.gcp.vmoperations",
        "obj": "add_disk",
        "line": 205,
        "column": 12,
        "path": "resource_adapters\\providers\\gcp\\vmoperations.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.ipam.vmoperations",
        "obj": "add_audit_log",
        "line": 23,
        "column": 0,
        "path": "resource_adapters\\providers\\ipam\\vmoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.ipam.vmoperations",
        "obj": "get_eligible_base_host",
        "line": 103,
        "column": 12,
        "path": "resource_adapters\\providers\\ipam\\vmoperations.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (random)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.ipam.vmoperations",
        "obj": "get_eligible_base_host",
        "line": 106,
        "column": 16,
        "path": "resource_adapters\\providers\\ipam\\vmoperations.py",
        "symbol": "consider-using-get",
        "message": "Consider using dict.get for getting values from a dict if a key is present or a default if not",
        "message-id": "R1715"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.openstack.commonoperations",
        "obj": "add_audit_log",
        "line": 9,
        "column": 0,
        "path": "resource_adapters\\providers\\openstack\\commonoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.openstack.diskoperations",
        "obj": "add_audit_log",
        "line": 9,
        "column": 0,
        "path": "resource_adapters\\providers\\openstack\\diskoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.openstack.networkoperations",
        "obj": "add_audit_log",
        "line": 9,
        "column": 0,
        "path": "resource_adapters\\providers\\openstack\\networkoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.openstack.vmoperations",
        "obj": "add_audit_log",
        "line": 10,
        "column": 0,
        "path": "resource_adapters\\providers\\openstack\\vmoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.postprovisioning.operations",
        "obj": "add_audit_log",
        "line": 59,
        "column": 0,
        "path": "resource_adapters\\providers\\postprovisioning\\operations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.storage.nfsoperations",
        "obj": "add_audit_log",
        "line": 15,
        "column": 0,
        "path": "resource_adapters\\providers\\storage\\nfsoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.storage.nfsoperations",
        "obj": "create_nfs_export",
        "line": 35,
        "column": 0,
        "path": "resource_adapters\\providers\\storage\\nfsoperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (115/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.storage.nfsoperations",
        "obj": "modify_nfs_export",
        "line": 248,
        "column": 0,
        "path": "resource_adapters\\providers\\storage\\nfsoperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (81/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.storage.smboperations",
        "obj": "add_audit_log",
        "line": 13,
        "column": 0,
        "path": "resource_adapters\\providers\\storage\\smboperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.storage.smboperations",
        "obj": "create_smb_share",
        "line": 34,
        "column": 0,
        "path": "resource_adapters\\providers\\storage\\smboperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (65/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.storage.smboperations",
        "obj": "modify_smb_share",
        "line": 172,
        "column": 0,
        "path": "resource_adapters\\providers\\storage\\smboperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (55/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.storage.smboperations",
        "obj": "modify_quotas",
        "line": 364,
        "column": 0,
        "path": "resource_adapters\\providers\\storage\\smboperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (57/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.commonoperations",
        "obj": "async_tasks_wait",
        "line": 18,
        "column": 4,
        "path": "resource_adapters\\providers\\vmware\\commonoperations.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.vmware.dcoperations",
        "obj": "",
        "line": 467,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\dcoperations.py",
        "symbol": "trailing-newlines",
        "message": "Trailing newlines",
        "message-id": "C0305"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.dcoperations",
        "obj": "add_audit_log",
        "line": 10,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\dcoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "resource_adapters.providers.vmware.dcoperations",
        "obj": "edit_resource_pool",
        "line": 164,
        "column": 28,
        "path": "resource_adapters\\providers\\vmware\\dcoperations.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "warning",
        "module": "resource_adapters.providers.vmware.dcoperations",
        "obj": "edit_resource_pool",
        "line": 200,
        "column": 28,
        "path": "resource_adapters\\providers\\vmware\\dcoperations.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.dcoperations",
        "obj": "edit_resource_pool",
        "line": 109,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\dcoperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (72/50)",
        "message-id": "R0915"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1414/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "",
        "line": 7,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "multiple-imports",
        "message": "Multiple imports on one line (re, ssl)",
        "message-id": "C0410"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "add_audit_log",
        "line": 15,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "start_vm",
        "line": 70,
        "column": 22,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "warning",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "stop_vm",
        "line": 118,
        "column": 22,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "detach_disk",
        "line": 260,
        "column": 4,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "change_disk_size",
        "line": 391,
        "column": 4,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (7/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "add_disk",
        "line": 584,
        "column": 4,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "warning",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "add_disk",
        "line": 672,
        "column": 22,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "add_disk",
        "line": 570,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (64/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "attach_disk",
        "line": 675,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (54/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "relocate_vm",
        "line": 986,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (52/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "set_vm_storage_policy",
        "line": 1276,
        "column": 29,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "warning",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "set_vm_storage_policy",
        "line": 1307,
        "column": 37,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "set_vm_storage_policy",
        "line": 1165,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (91/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "get_host_details",
        "line": 1358,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(host_view.view) instead.",
        "message-id": "R1721"
    },
    {
        "type": "refactor",
        "module": "resource_adapters.providers.vmware.vmoperations",
        "obj": "get_host_details",
        "line": 1363,
        "column": 0,
        "path": "resource_adapters\\providers\\vmware\\vmoperations.py",
        "symbol": "unnecessary-comprehension",
        "message": "Unnecessary use of a comprehension, use list(datastore_view.view) instead.",
        "message-id": "R1721"
    },
    {
        "type": "error",
        "module": "resource_adapters.utils.clients",
        "obj": "",
        "line": 17,
        "column": 0,
        "path": "resource_adapters\\utils\\clients.py",
        "symbol": "no-name-in-module",
        "message": "No name 'oauth2' in module 'google'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "resource_adapters.utils.clients",
        "obj": "",
        "line": 18,
        "column": 0,
        "path": "resource_adapters\\utils\\clients.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute_v1' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "resource_adapters.utils.clients",
        "obj": "",
        "line": 19,
        "column": 0,
        "path": "resource_adapters\\utils\\clients.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "resource_adapters.utils.clients",
        "obj": "",
        "line": 21,
        "column": 0,
        "path": "resource_adapters\\utils\\clients.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "resource_adapters.utils.gcp_clients",
        "obj": "",
        "line": 2,
        "column": 0,
        "path": "resource_adapters\\utils\\gcp_clients.py",
        "symbol": "no-name-in-module",
        "message": "No name 'oauth2' in module 'google'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "resource_adapters.utils.gcp_clients",
        "obj": "",
        "line": 3,
        "column": 0,
        "path": "resource_adapters\\utils\\gcp_clients.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute_v1' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "resource_adapters.utils.gcp_clients",
        "obj": "",
        "line": 4,
        "column": 0,
        "path": "resource_adapters\\utils\\gcp_clients.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "resource_adapters.utils.gcp_clients",
        "obj": "",
        "line": 6,
        "column": 0,
        "path": "resource_adapters\\utils\\gcp_clients.py",
        "symbol": "no-name-in-module",
        "message": "No name 'compute' in module 'google.cloud'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "resource_adapters.utils.storage_client",
        "obj": "",
        "line": 10,
        "column": 0,
        "path": "resource_adapters\\utils\\storage_client.py",
        "symbol": "trailing-newlines",
        "message": "Trailing newlines",
        "message-id": "C0305"
    },
    {
        "type": "refactor",
        "module": "processor.askpass",
        "obj": "",
        "line": 13,
        "column": 4,
        "path": "processor\\askpass.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using sys.exit()",
        "message-id": "R1722"
    },
    {
        "type": "refactor",
        "module": "processor.askpass",
        "obj": "",
        "line": 17,
        "column": 4,
        "path": "processor\\askpass.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using sys.exit()",
        "message-id": "R1722"
    },
    {
        "type": "refactor",
        "module": "processor.askpass",
        "obj": "",
        "line": 19,
        "column": 0,
        "path": "processor\\askpass.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using sys.exit()",
        "message-id": "R1722"
    },
    {
        "type": "error",
        "module": "processor.container",
        "obj": "",
        "line": 8,
        "column": 0,
        "path": "processor\\container.py",
        "symbol": "no-name-in-module",
        "message": "No name 'operation' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "processor.container",
        "obj": "",
        "line": 9,
        "column": 0,
        "path": "processor\\container.py",
        "symbol": "no-name-in-module",
        "message": "No name 'operation' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "processor.container",
        "obj": "",
        "line": 12,
        "column": 0,
        "path": "processor\\container.py",
        "symbol": "no-name-in-module",
        "message": "No name 'engine' in module 'core'",
        "message-id": "E0611"
    },
    {
        "type": "warning",
        "module": "processor.resources",
        "obj": "",
        "line": 1,
        "column": 1,
        "path": "processor\\resources.py",
        "symbol": "fixme",
        "message": "TODO",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "processor.resources",
        "obj": "ThreadExecutorResource.init",
        "line": 19,
        "column": 4,
        "path": "processor\\resources.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "processor.resources",
        "obj": "ThreadExecutorResource.init",
        "line": 27,
        "column": 22,
        "path": "processor\\resources.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "processor.service",
        "obj": "",
        "line": 80,
        "column": 20,
        "path": "processor\\service.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "error",
        "module": "processor.update_openstack_lib",
        "obj": "",
        "line": 20,
        "column": 14,
        "path": "processor\\update_openstack_lib.py",
        "symbol": "too-many-format-args",
        "message": "Too many arguments for format string",
        "message-id": "E1305"
    },
    {
        "type": "refactor",
        "module": "consumer.core.app.consumer",
        "obj": "Consumer",
        "line": 11,
        "column": 0,
        "path": "consumer\\core\\app\\consumer.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "util.core.app.add_default_config",
        "obj": "add_default_config",
        "line": 50,
        "column": 4,
        "path": "util\\core\\app\\add_default_config.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (11/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "util.core.app.add_default_config",
        "obj": "add_default_config",
        "line": 50,
        "column": 4,
        "path": "util\\core\\app\\add_default_config.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (10/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "util.core.app.add_default_config",
        "obj": "add_default_config",
        "line": 7,
        "column": 0,
        "path": "util\\core\\app\\add_default_config.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (82/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "util.core.app.email_client",
        "obj": "send_email",
        "line": 9,
        "column": 0,
        "path": "util\\core\\app\\email_client.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "util.core.app.logger",
        "obj": "setHandlers",
        "line": 165,
        "column": 0,
        "path": "util\\core\\app\\logger.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "util.core.app.models",
        "obj": "",
        "line": 2,
        "column": 0,
        "path": "util\\core\\app\\models.py",
        "symbol": "reimported",
        "message": "Reimport 'JSON' (imported line 1)",
        "message-id": "W0404"
    },
    {
        "type": "error",
        "module": "util.core.app.state_response_insert",
        "obj": "insert_state_response",
        "line": 51,
        "column": 4,
        "path": "util\\core\\app\\state_response_insert.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'add' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "util.core.app.state_response_insert",
        "obj": "insert_state_response",
        "line": 52,
        "column": 4,
        "path": "util\\core\\app\\state_response_insert.py",
        "symbol": "no-member",
        "message": "Instance of 'scoped_session' has no 'commit' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "",
        "line": 16,
        "column": 0,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "reimported",
        "message": "Reimport 'exc' (imported line 15)",
        "message-id": "W0404"
    },
    {
        "type": "error",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.__init__",
        "line": 66,
        "column": 8,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.clone_repo",
        "line": 174,
        "column": 22,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass._tfplan",
        "line": 238,
        "column": 18,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "refactor",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.generate_infracost",
        "line": 303,
        "column": 16,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.tf_cmd",
        "line": 335,
        "column": 8,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.tf_cmd",
        "line": 342,
        "column": 22,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "logging-format-interpolation",
        "message": "Use lazy % or % formatting in logging functions",
        "message-id": "W1202"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.tf_cmd",
        "line": 345,
        "column": 22,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "logging-format-interpolation",
        "message": "Use lazy % or % formatting in logging functions",
        "message-id": "W1202"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.tf_cmd",
        "line": 345,
        "column": 22,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "duplicate-string-formatting-argument",
        "message": "Duplicate string formatting argument 'stdout', consider passing as named argument",
        "message-id": "W1308"
    },
    {
        "type": "error",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.tfpull_state",
        "line": 354,
        "column": 8,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.tfpull_state",
        "line": 356,
        "column": 18,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "logging-format-interpolation",
        "message": "Use lazy % or % formatting in logging functions",
        "message-id": "W1202"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.tfpull_state",
        "line": 356,
        "column": 18,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "duplicate-string-formatting-argument",
        "message": "Duplicate string formatting argument 'stdout', consider passing as named argument",
        "message-id": "W1308"
    },
    {
        "type": "error",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.__call__",
        "line": 423,
        "column": 20,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "logging-too-many-args",
        "message": "Too many arguments for logging format string",
        "message-id": "E1205"
    },
    {
        "type": "warning",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.__call__",
        "line": 435,
        "column": 26,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "refactor",
        "module": "util.core.app.terraform_resource",
        "obj": "TerraformClass.__call__",
        "line": 407,
        "column": 4,
        "path": "util\\core\\app\\terraform_resource.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.utils.azure_clients:26\n==resource_adapters.utils.clients:22\ndef get_compute_client(parameters):\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    subscription_id = parameters.get('azure_subscription_id')\n\n    token_credential = ClientSecretCredential(\n        tenant_id, client_id, secret)\n    compute_client = ComputeManagementClient(token_credential,\n                                             subscription_id)\n    return compute_client\n\n\ndef get_network_client(parameters):\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    subscription_id = parameters.get('azure_subscription_id')\n\n    token_credential = ClientSecretCredential(\n        tenant_id, client_id, secret)\n    network_client = NetworkManagementClient(token_credential,\n                                             subscription_id)\n    return network_client\n\n\ndef get_dns_client(parameters):\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    subscription_id = parameters.get('azure_subscription_id')\n\n    token_credential = ClientSecretCredential(\n        tenant_id, client_id, secret)\n    dns_client = PrivateDnsManagementClient(token_credential,\n                                            subscription_id)\n    return dns_client\n\n\ndef get_dns_ops_client(parameters):\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    subscription_id = parameters.get('azure_subscription_id')\n\n    token_credential = ClientSecretCredential(\n        tenant_id, client_id, secret)\n    dns_ops_client = DnsManagementClient(token_credential,\n                                            subscription_id)\n    return dns_ops_client\n\n\n\ndef get_blob_service_client(parameters):\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    account_name = parameters.get('storage_account_name')\n    token_credential = ClientSecretCredential(\n        tenant_id, client_id, secret)\n    blob_service_client = BlobServiceClient(\n        account_url=\"https://%s.blob.core.windows.net\" % account_name,\n        credential=token_credential)\n    return blob_service_client\n\n\ndef get_queue_service_client(parameters):\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    account_name = parameters.get('storage_account_name')\n    token_credential = ClientSecretCredential(\n        tenant_id, client_id, secret)\n    queue_service_client = QueueServiceClient(\n        account_url=\"https://%s.queue.core.windows.net\" % account_name,\n        credential=token_credential)\n    return queue_service_client\n\ndef get_datalake_client(parameters):\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    subscription_id = parameters.get('azure_subscription_id')\n    credentials = ServicePrincipalCredentials(\n        client_id=client_id,\n        secret=secret,\n        tenant=tenant_id)\n\n    datalake_client = DataLakeStoreAccountManagementClient(credentials,\n                                                           subscription_id)\n    return datalake_client\n\ndef get_storage_client(parameters):\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    subscription_id = parameters.get('azure_subscription_id')\n\n    token_credential = ClientSecretCredential(\n        tenant_id, client_id, secret)\n    storage_client = StorageManagementClient(token_credential,\n                                             subscription_id)\n    return storage_client",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.utils.clients:126\n==resource_adapters.utils.gcp_clients:8\ndef get_gcp_instance_client(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    instance_client = compute_v1.InstancesClient(credentials=credentials)\n    return instance_client\n\ndef get_gcp_op_client(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    op_client = compute_v1.ZoneOperationsClient(credentials=credentials)\n    return op_client\n\ndef get_gcp_disk_client(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    disk_client = compute_v1.DisksClient(credentials=credentials)\n    return disk_client\n\ndef get_gcp_network_client(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    network_client = NetworksClient(credentials=credentials)\n    return network_client\n\ndef get_gcp_address_client(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    address_client = AddressesClient(credentials=credentials)\n    return address_client\n\ndef get_gcp_subnet_client(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    subnet_client = SubnetworksClient(credentials=credentials)\n    return subnet_client\n\ndef get_gcp_firewall_client(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    firewall_client = FirewallsClient(credentials=credentials)\n    return firewall_client\n\ndef get_gcp_wait_client_global(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    wait_client = compute_v1.GlobalOperationsClient(credentials=credentials)\n    return wait_client\n\ndef get_gcp_wait_client_regional(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    wait_client = compute_v1.RegionOperationsClient(credentials=credentials)\n    return wait_client\n\ndef get_gcp_image_client(parameters):\n    cred = parameters.get('credentials')\n    if isinstance(cred, str):\n        cred = json.loads(cred)\n    credentials = service_account.Credentials.from_service_account_info(\n        cred)\n    image_client = ImagesClient(credentials=credentials)\n    return image_client",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.reports:87\n==fastapi_webserver.core.app.api.sso:192\n        if len(creds) == 0:\n            response = JSONResponse(content=jsonable_encoder({}))\n            return response\n        resp = {_col: getattr(creds[0], _col) for _col in creds[0].__table__.columns.keys()}\n        try:\n            del resp['created_date']\n            del resp['modified_date']\n        except:\n            pass\n        #insert_config_audit_log('OAuth', resp, 'DELETE', modified_by, modified_by)\n        creds.append({'message': 'Success'})\n        response = JSONResponse(content=jsonable_encoder(creds))\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==util.core.app.audit_log_transaction:64\n==util.core.app.config_audit:8\n    if not session_factory:\n        config_file = os.path.join(os.environ['BASEDIR'],\n                                   'configurations',\n                                   f'{os.environ[\"EXECFILE\"]}.yml')\n        # config_file = \"dev.yml\"\n        if not os.path.exists(config_file):\n            config_file = os.path.join(os.environ['BASEDIR'],\n                                       'core', 'core', 'settings',\n                                       f'{os.environ[\"EXECFILE\"]}.yml')\n\n        print(\"config_file = \" + str(config_file))\n        try:\n            with open(config_file, \"r\") as f:\n                config = yaml.safe_load(f)\n        except Exception as ex:\n            raise Exception(\"Config file not found:%s\" % str(ex))\n        print(\"config = \" + str(config))\n        db = DatabaseResource(\n            db_url=config.get('db').get('url'),\n            db_schema=config.get('db').get('schema')\n        )\n        session_factory = db.session\n    # print(\"session_factory = \" + str(session_factory))\n    service = CommonService(repository=CommonRepository(session_factory,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.postprovisioning.operations:58\n==resource_adapters.providers.storage.smboperations:12\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n\n\ndef add_state_response(session,task_id,name,data):\n    payload = {\n        \"name\": name,\n        \"data\": data\n    }\n    LOG.debug(\"Insert State Response:%s\" % payload, {'task_id': task_id})\n    insert_state_response(payload)\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==resource_adapters.providers.openstack.commonoperations:0\n==resource_adapters.providers.openstack.diskoperations:0\n==resource_adapters.providers.openstack.networkoperations:0\nfrom util.core.app.audit_log_transaction import insert_audit_log\nfrom util.core.app.constants import TASK_STATUS\nfrom resource_adapters.utils.openstack_clients import get_openstack_client\n#from pyVmomi import vim\n\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n\n#deploy_trigger",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.gcp.commonoperations:0\n==resource_adapters.providers.gcp.diskoperations:1\nfrom util.core.app.audit_log_transaction import insert_audit_log\nfrom util.core.app.constants import TASK_STATUS\nfrom util.core.app.terraform_resource import TerraformClass\nfrom google.cloud import compute_v1\nfrom resource_adapters.utils.gcp_clients import *\n\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.dnsoperations:1\n==resource_adapters.providers.azure.privatednsoperations:1\nfrom util.core.app.audit_log_transaction import insert_audit_log\nfrom util.core.app.constants import TASK_STATUS\nfrom azure.mgmt.network.models import Subnet, InboundNatRule, \\\n    FrontendIPConfiguration, Probe\nfrom resource_adapters.utils.azure_clients import *\n\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.reports:55\n==fastapi_webserver.core.app.api.sso:157\n        oauth = {_col: getattr(oauth, _col) for _col in oauth.__table__.columns.keys()}\n        # if is_upd:\n        #    insert_config_audit_log('OAuth', oauth, 'UPDATE', modified_by, modified_by)\n        response = JSONResponse(content=jsonable_encoder(oauth))\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.gcp.networkoperations:0\n==resource_adapters.providers.gcp.vmoperations:1\nfrom util.core.app.audit_log_transaction import insert_audit_log\nfrom util.core.app.constants import TASK_STATUS\nfrom util.core.app.terraform_resource import TerraformClass\nfrom google.cloud import compute_v1\nfrom resource_adapters.utils.gcp_clients import *\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.dashboard_API:1523\n==fastapi_webserver.core.app.api.orchestrator_API:669\n            resp['total'] = total\n        response = JSONResponse(content=jsonable_encoder(resp))\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.dashboard_API:559\n==fastapi_webserver.core.app.api.orchestrator_API:525\n        response = JSONResponse(content=jsonable_encoder(data))\n\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==util.core.app.audit_log_transaction:41\n==util.core.app.config_audit:13\n        if not os.path.exists(config_file):\n            config_file = os.path.join(os.environ['BASEDIR'],\n                                       'core', 'core', 'settings',\n                                       f'{os.environ[\"EXECFILE\"]}.yml')\n\n        print(\"config_file = \" + str(config_file))\n        try:\n            with open(config_file, \"r\") as f:\n                config = yaml.safe_load(f)\n        except Exception as ex:\n            raise Exception(\"Config file not found:%s\" % str(ex))\n        print(\"config = \" + str(config))\n        db = DatabaseResource(\n            db_url=config.get('db').get('url'),\n            db_schema=config.get('db').get('schema')\n        )\n        session_factory = db.session",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.diskoperations:4\n==resource_adapters.providers.azure.vmoperations:5\nfrom util.core.app.terraform_resource import TerraformClass\nfrom resource_adapters.utils.azure_clients import *\n\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 13 files\n==fastapi_webserver.core.app.api.dashboard_API:1671\n==fastapi_webserver.core.app.api.dashboard_API:1863\n==fastapi_webserver.core.app.api.dashboard_API:193\n==fastapi_webserver.core.app.api.dashboard_API:1958\n==fastapi_webserver.core.app.api.dashboard_API:2086\n==fastapi_webserver.core.app.api.dashboard_API:2121\n==fastapi_webserver.core.app.api.dashboard_API:2205\n==fastapi_webserver.core.app.api.dashboard_API:2247\n==fastapi_webserver.core.app.api.dashboard_API:2600\n==fastapi_webserver.core.app.api.dashboard_API:368\n==fastapi_webserver.core.app.api.orchestrator_API:575\n==fastapi_webserver.core.app.api.orchestrator_API:604\n==fastapi_webserver.core.app.api.orchestrator_API:670\n        response = JSONResponse(content=jsonable_encoder(resp))\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.repositories:287\n==util.core.app.repositories:61\n                try:\n                    filter_query = session.query(self._model).filter(*filters)\n                    row = filter_query.one()\n                    if row:\n                        for column, value in kwargs.items():\n                            setattr(row, column, value)\n                        session.add(row)\n                        session.commit()\n                        session.refresh(row)\n                        return row\n                except sqexcp.NoResultFound as excp:\n                    pass\n            row = self._model(**kwargs)\n            session.add(row)\n            session.commit()\n            session.refresh(row)\n            return row",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==util.core.app.audit_log_transaction:65\n==util.core.app.config_audit:9\n==util.core.app.state_response_insert:13\n        config_file = os.path.join(os.environ['BASEDIR'],\n                                   'configurations',\n                                   f'{os.environ[\"EXECFILE\"]}.yml')\n        # config_file = \"dev.yml\"\n        if not os.path.exists(config_file):\n            config_file = os.path.join(os.environ['BASEDIR'],\n                                       'core', 'core', 'settings',\n                                       f'{os.environ[\"EXECFILE\"]}.yml')\n\n        print(\"config_file = \" + str(config_file))\n        try:\n            with open(config_file, \"r\") as f:\n                config = yaml.safe_load(f)\n        except Exception as ex:\n            raise Exception(\"Config file not found:%s\" % str(ex))\n        print(\"config = \" + str(config))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 4 files\n==resource_adapters.providers.azure.networkoperations:7\n==resource_adapters.providers.storage.nfsoperations:10\n==resource_adapters.providers.vmware.dcoperations:5\n==resource_adapters.providers.vmware.vmoperations:10\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n\n#################### Remove backend pool to Application Gateway #################",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 5 files\n==resource_adapters.providers.azure.diskoperations:5\n==resource_adapters.providers.azure.dnsoperations:5\n==resource_adapters.providers.azure.privatednsoperations:5\n==resource_adapters.providers.azure.storageoperations:6\n==resource_adapters.providers.azure.vmoperations:6\nfrom resource_adapters.utils.azure_clients import *\n\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.core.resources:18\n==util.core.app.resources:16\n        self._session_factory = orm.scoped_session(\n            orm.sessionmaker(\n                autocommit=False,\n                autoflush=False,\n                bind=self._engine,\n            ),\n        )\n\n\n    @contextmanager\n    def session(self):\n        session: Session = self._session_factory()\n        try:\n            yield session\n        except Exception:\n            session.rollback()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 5 files\n==fastapi_webserver.core.app.api.dashboard_API:194\n==fastapi_webserver.core.app.api.reports:59\n==fastapi_webserver.core.app.api.reports:99\n==fastapi_webserver.core.app.api.sso:161\n==fastapi_webserver.core.app.api.sso:204\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 72 files\n==fastapi_webserver.core.app.api.dashboard_API:1033\n==fastapi_webserver.core.app.api.dashboard_API:1099\n==fastapi_webserver.core.app.api.dashboard_API:1132\n==fastapi_webserver.core.app.api.dashboard_API:1193\n==fastapi_webserver.core.app.api.dashboard_API:1244\n==fastapi_webserver.core.app.api.dashboard_API:1289\n==fastapi_webserver.core.app.api.dashboard_API:1331\n==fastapi_webserver.core.app.api.dashboard_API:1378\n==fastapi_webserver.core.app.api.dashboard_API:1414\n==fastapi_webserver.core.app.api.dashboard_API:1447\n==fastapi_webserver.core.app.api.dashboard_API:1525\n==fastapi_webserver.core.app.api.dashboard_API:1672\n==fastapi_webserver.core.app.api.dashboard_API:1864\n==fastapi_webserver.core.app.api.dashboard_API:1959\n==fastapi_webserver.core.app.api.dashboard_API:2087\n==fastapi_webserver.core.app.api.dashboard_API:2122\n==fastapi_webserver.core.app.api.dashboard_API:2206\n==fastapi_webserver.core.app.api.dashboard_API:2248\n==fastapi_webserver.core.app.api.dashboard_API:2432\n==fastapi_webserver.core.app.api.dashboard_API:2556\n==fastapi_webserver.core.app.api.dashboard_API:2601\n==fastapi_webserver.core.app.api.dashboard_API:2643\n==fastapi_webserver.core.app.api.dashboard_API:2685\n==fastapi_webserver.core.app.api.dashboard_API:2728\n==fastapi_webserver.core.app.api.dashboard_API:2769\n==fastapi_webserver.core.app.api.dashboard_API:2811\n==fastapi_webserver.core.app.api.dashboard_API:2845\n==fastapi_webserver.core.app.api.dashboard_API:2877\n==fastapi_webserver.core.app.api.dashboard_API:289\n==fastapi_webserver.core.app.api.dashboard_API:2918\n==fastapi_webserver.core.app.api.dashboard_API:2959\n==fastapi_webserver.core.app.api.dashboard_API:3005\n==fastapi_webserver.core.app.api.dashboard_API:3070\n==fastapi_webserver.core.app.api.dashboard_API:3111\n==fastapi_webserver.core.app.api.dashboard_API:3151\n==fastapi_webserver.core.app.api.dashboard_API:3192\n==fastapi_webserver.core.app.api.dashboard_API:3233\n==fastapi_webserver.core.app.api.dashboard_API:3277\n==fastapi_webserver.core.app.api.dashboard_API:3318\n==fastapi_webserver.core.app.api.dashboard_API:3406\n==fastapi_webserver.core.app.api.dashboard_API:3450\n==fastapi_webserver.core.app.api.dashboard_API:3491\n==fastapi_webserver.core.app.api.dashboard_API:3533\n==fastapi_webserver.core.app.api.dashboard_API:369\n==fastapi_webserver.core.app.api.dashboard_API:410\n==fastapi_webserver.core.app.api.dashboard_API:526\n==fastapi_webserver.core.app.api.dashboard_API:561\n==fastapi_webserver.core.app.api.dashboard_API:595\n==fastapi_webserver.core.app.api.dashboard_API:641\n==fastapi_webserver.core.app.api.dashboard_API:693\n==fastapi_webserver.core.app.api.dashboard_API:738\n==fastapi_webserver.core.app.api.dashboard_API:782\n==fastapi_webserver.core.app.api.dashboard_API:833\n==fastapi_webserver.core.app.api.dashboard_API:878\n==fastapi_webserver.core.app.api.dashboard_API:927\n==fastapi_webserver.core.app.api.dashboard_API:976\n==fastapi_webserver.core.app.api.orchestrator_API:1025\n==fastapi_webserver.core.app.api.orchestrator_API:1072\n==fastapi_webserver.core.app.api.orchestrator_API:1201\n==fastapi_webserver.core.app.api.orchestrator_API:527\n==fastapi_webserver.core.app.api.orchestrator_API:576\n==fastapi_webserver.core.app.api.orchestrator_API:605\n==fastapi_webserver.core.app.api.orchestrator_API:671\n==fastapi_webserver.core.app.api.orchestrator_API:747\n==fastapi_webserver.core.app.api.orchestrator_API:798\n==fastapi_webserver.core.app.api.orchestrator_API:860\n==fastapi_webserver.core.app.api.orchestrator_API:925\n==fastapi_webserver.core.app.api.orchestrator_API:974\n==fastapi_webserver.core.app.api.reports:59\n==fastapi_webserver.core.app.api.reports:99\n==fastapi_webserver.core.app.api.sso:161\n==fastapi_webserver.core.app.api.sso:204\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.gcp.diskoperations:41\n==resource_adapters.providers.gcp.vmoperations:213\n                    'type_': \"projects/%s/zones/%s/diskTypes/%s\" %\n                             (parameters.get('gcp_project'),\n                              parameters.get('zone'),\n                              disk_info.get('disk_type'))\n                }\n                resource = compute_v1.Disk(data)\n                op = disk_client.insert(\n                    project=parameters.get('gcp_project'),\n                    zone=parameters.get('zone'),\n                    disk_resource=resource)\n                while op.status != compute_v1.Operation.Status.DONE:\n                    op = op_client.wait(\n                        operation=op.name, zone=parameters.get('zone'),\n                        project=parameters.get('gcp_project'))\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.vmoperations:8\n==resource_adapters.providers.gcp.vmoperations:6\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n\ndef start_vm(parameters, session, **kwargs):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.networkoperations:258\n==resource_adapters.providers.gcp.networkoperations:26\n    add_audit_log(session, task_id, \"NetworkOperations\", \"delete_public_ip\",\n                  \"started\", TASK_STATUS.COMPLETED)\n    try:\n        ip_config_info = parameters.get('ip_config_info')\n    except Exception as ex:\n        raise Exception(\"Ip configuration is missing:%s\" % str(ex))\n    ips_deleted = []\n    ips_failed = []\n    if ip_config_info:\n        for ip_name in ip_config_info:\n            try:\n                LOG.debug(\"IP Name is:%s\" % ip_name, {'task_id': task_id})\n                add_audit_log(session, task_id, \"NetworkOperations\",\n                              \"delete_public_ip:%s\" % ip_name,\n                              \"started\", TASK_STATUS.COMPLETED)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 6 files\n==resource_adapters.providers.azure.commonoperations:4\n==resource_adapters.providers.openstack.commonoperations:5\n==resource_adapters.providers.openstack.diskoperations:5\n==resource_adapters.providers.openstack.networkoperations:5\n==resource_adapters.providers.openstack.vmoperations:6\n==resource_adapters.providers.storage.smboperations:9\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.reports:129\n==fastapi_webserver.core.app.api.sso:244\n        response = JSONResponse(content=jsonable_encoder(cred))\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.dashboard_API:348\n==fastapi_webserver.core.app.api.orchestrator_API:649\n        for d in data:\n            d1 = {_col: getattr(d, _col) for _col in d.__table__.columns.keys()}\n            old_timezone = pytz.timezone('Etc/UTC')\n            new_timezone = pytz.timezone('Asia/Kolkata')\n            localized_created_time = old_timezone.localize(d1['created_date'])\n            new_timezone_created_time = localized_created_time.astimezone(new_timezone)\n            d1['created_date'] = new_timezone_created_time.strftime(\"%d-%m-%Y %H:%M:%S\")\n            localized_modified_time = old_timezone.localize(d1['modified_date'])\n            new_timezone_modified_time = localized_modified_time.astimezone(new_timezone)\n            d1['modified_date'] = new_timezone_modified_time.strftime(\"%d-%m-%Y %H:%M:%S\")\n\n            try:\n                if d1['status'] == 'IN_QUEUE':\n                    d1['identifier'] = 'NA'\n                else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 74 files\n==fastapi_webserver.core.app.api.dashboard_API:1033\n==fastapi_webserver.core.app.api.dashboard_API:1099\n==fastapi_webserver.core.app.api.dashboard_API:1132\n==fastapi_webserver.core.app.api.dashboard_API:1193\n==fastapi_webserver.core.app.api.dashboard_API:1244\n==fastapi_webserver.core.app.api.dashboard_API:1289\n==fastapi_webserver.core.app.api.dashboard_API:1331\n==fastapi_webserver.core.app.api.dashboard_API:1378\n==fastapi_webserver.core.app.api.dashboard_API:1414\n==fastapi_webserver.core.app.api.dashboard_API:1447\n==fastapi_webserver.core.app.api.dashboard_API:1525\n==fastapi_webserver.core.app.api.dashboard_API:1672\n==fastapi_webserver.core.app.api.dashboard_API:1864\n==fastapi_webserver.core.app.api.dashboard_API:194\n==fastapi_webserver.core.app.api.dashboard_API:1959\n==fastapi_webserver.core.app.api.dashboard_API:2087\n==fastapi_webserver.core.app.api.dashboard_API:2122\n==fastapi_webserver.core.app.api.dashboard_API:2206\n==fastapi_webserver.core.app.api.dashboard_API:2248\n==fastapi_webserver.core.app.api.dashboard_API:2432\n==fastapi_webserver.core.app.api.dashboard_API:2556\n==fastapi_webserver.core.app.api.dashboard_API:2601\n==fastapi_webserver.core.app.api.dashboard_API:2643\n==fastapi_webserver.core.app.api.dashboard_API:2685\n==fastapi_webserver.core.app.api.dashboard_API:2728\n==fastapi_webserver.core.app.api.dashboard_API:2769\n==fastapi_webserver.core.app.api.dashboard_API:2811\n==fastapi_webserver.core.app.api.dashboard_API:2845\n==fastapi_webserver.core.app.api.dashboard_API:2877\n==fastapi_webserver.core.app.api.dashboard_API:289\n==fastapi_webserver.core.app.api.dashboard_API:2918\n==fastapi_webserver.core.app.api.dashboard_API:2959\n==fastapi_webserver.core.app.api.dashboard_API:3005\n==fastapi_webserver.core.app.api.dashboard_API:3070\n==fastapi_webserver.core.app.api.dashboard_API:3111\n==fastapi_webserver.core.app.api.dashboard_API:3151\n==fastapi_webserver.core.app.api.dashboard_API:3192\n==fastapi_webserver.core.app.api.dashboard_API:3233\n==fastapi_webserver.core.app.api.dashboard_API:3277\n==fastapi_webserver.core.app.api.dashboard_API:3318\n==fastapi_webserver.core.app.api.dashboard_API:3406\n==fastapi_webserver.core.app.api.dashboard_API:3450\n==fastapi_webserver.core.app.api.dashboard_API:3491\n==fastapi_webserver.core.app.api.dashboard_API:3533\n==fastapi_webserver.core.app.api.dashboard_API:369\n==fastapi_webserver.core.app.api.dashboard_API:410\n==fastapi_webserver.core.app.api.dashboard_API:526\n==fastapi_webserver.core.app.api.dashboard_API:561\n==fastapi_webserver.core.app.api.dashboard_API:595\n==fastapi_webserver.core.app.api.dashboard_API:641\n==fastapi_webserver.core.app.api.dashboard_API:693\n==fastapi_webserver.core.app.api.dashboard_API:738\n==fastapi_webserver.core.app.api.dashboard_API:782\n==fastapi_webserver.core.app.api.dashboard_API:833\n==fastapi_webserver.core.app.api.dashboard_API:878\n==fastapi_webserver.core.app.api.dashboard_API:927\n==fastapi_webserver.core.app.api.dashboard_API:976\n==fastapi_webserver.core.app.api.infracost:41\n==fastapi_webserver.core.app.api.orchestrator_API:1025\n==fastapi_webserver.core.app.api.orchestrator_API:1072\n==fastapi_webserver.core.app.api.orchestrator_API:1201\n==fastapi_webserver.core.app.api.orchestrator_API:527\n==fastapi_webserver.core.app.api.orchestrator_API:576\n==fastapi_webserver.core.app.api.orchestrator_API:605\n==fastapi_webserver.core.app.api.orchestrator_API:671\n==fastapi_webserver.core.app.api.orchestrator_API:747\n==fastapi_webserver.core.app.api.orchestrator_API:798\n==fastapi_webserver.core.app.api.orchestrator_API:860\n==fastapi_webserver.core.app.api.orchestrator_API:925\n==fastapi_webserver.core.app.api.orchestrator_API:974\n==fastapi_webserver.core.app.api.reports:59\n==fastapi_webserver.core.app.api.reports:99\n==fastapi_webserver.core.app.api.sso:161\n==fastapi_webserver.core.app.api.sso:204\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==util.core.app.cipher_keys:9\n==util.core.app.common:3\ndef recr_dict(_dict, func):\n    _tmp = deepcopy(_dict)\n    for key, value in _dict.items():\n        if isinstance(value, dict):\n            _tmp[key] = recr_dict(value, func)\n        elif isinstance(value, str):\n            if key.startswith('__e__'):\n                _value = func(_tmp.pop(key))\n                _tmp[key.strip('__e__')] = _value.strip()\n            else:\n                _tmp[key] = value.strip()\n    return _tmp\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.utils.clients:234\n==resource_adapters.utils.openstack_clients:3\ndef get_openstack_client(parameters):\n    auth_url = parameters.get('auth_url')\n    project_name = parameters.get('tenant_name')\n    password = parameters.get('password')\n    username = parameters.get('user_name')\n    region_name = parameters.get('region')\n    project_domain_name = parameters.get('project_domain_name', 'default')\n    user_domain_name = parameters.get('user_domain_name', 'default')\n    client = openstack.connect(auth_url=auth_url, project_name=project_name,\n                               username=username, password=password,\n                               region_name=region_name, verify=False,\n                               project_domain_name=project_domain_name,\n                               user_domain_name=project_domain_name)\n    return client",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.dnsoperations:68\n==resource_adapters.providers.azure.privatednsoperations:71\n                  \"started\", TASK_STATUS.COMPLETED)\n    try:\n        zone_info = parameters.get('zone_info')\n    except Exception as ex:\n        raise Exception(\"Zone info is missing:%s\" % str(ex))\n    sets_deleted = []\n    sets_failed = []\n    if zone_info:\n        for zone_data in zone_info:\n            set_name = zone_data.get('set_name')\n            try:\n                zone = zone_data.get('zone')\n                set_type = parameters.get('type')\n                LOG.debug(\"Zone Name is:%s\" % zone, {'task_id': task_id})",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 15 files\n==resource_adapters.providers.azure.commonoperations:4\n==resource_adapters.providers.azure.diskoperations:7\n==resource_adapters.providers.azure.dnsoperations:7\n==resource_adapters.providers.azure.privatednsoperations:7\n==resource_adapters.providers.azure.storageoperations:8\n==resource_adapters.providers.azure.vmoperations:8\n==resource_adapters.providers.gcp.commonoperations:6\n==resource_adapters.providers.gcp.diskoperations:7\n==resource_adapters.providers.gcp.networkoperations:5\n==resource_adapters.providers.gcp.vmoperations:6\n==resource_adapters.providers.openstack.commonoperations:5\n==resource_adapters.providers.openstack.diskoperations:5\n==resource_adapters.providers.openstack.networkoperations:5\n==resource_adapters.providers.openstack.vmoperations:6\n==resource_adapters.providers.storage.smboperations:9\nfrom util.core.app.logger import get_logger_func\nLOG = get_logger_func(__file__)\n\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.reports:11\n==fastapi_webserver.core.app.api.sso:11\nfrom util.core.app.validate_license import validate_license\n\nlogger = logging.getLogger(__name__)\nfrom pydantic import ValidationError\nfrom core.app.api.dashboard_API import insert_config_audit_log\nfrom core.core.container import Container\nfrom fastapi import APIRouter, Depends, Request\nfrom fastapi.encoders import jsonable_encoder\nfrom fastapi_versioning import version\nfrom dependency_injector.wiring import inject, Provide\nfrom starlette.responses import JSONResponse, RedirectResponse\nfrom authlib.integrations.starlette_client import OAuth, OAuthError\nfrom core.app.services import CommonService\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.dashboard_API:34\n==fastapi_webserver.core.app.api.sso:30\n    documents = yaml.full_load(file)\n_key = bytes(documents['password-encryption']['key'], 'utf-8')\n\n\ndef decrypt_password(decrypt_text):\n    \"\"\"\n                function to return decrypt password\n        \"\"\"\n    cipher_suite = Fernet(_key)\n    _pass = bytes(decrypt_text, 'utf-8')\n    decode_text = cipher_suite.decrypt(_pass)\n    return decode_text.decode('utf-8')\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==fastapi_webserver.core.app.api.dashboard_API:194\n==fastapi_webserver.core.app.api.reports:130\n==fastapi_webserver.core.app.api.sso:245\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 59 files\n==fastapi_webserver.core.app.api.dashboard_API:1033\n==fastapi_webserver.core.app.api.dashboard_API:1099\n==fastapi_webserver.core.app.api.dashboard_API:1132\n==fastapi_webserver.core.app.api.dashboard_API:1193\n==fastapi_webserver.core.app.api.dashboard_API:1244\n==fastapi_webserver.core.app.api.dashboard_API:1289\n==fastapi_webserver.core.app.api.dashboard_API:1331\n==fastapi_webserver.core.app.api.dashboard_API:1378\n==fastapi_webserver.core.app.api.dashboard_API:1414\n==fastapi_webserver.core.app.api.dashboard_API:1447\n==fastapi_webserver.core.app.api.dashboard_API:1525\n==fastapi_webserver.core.app.api.dashboard_API:1672\n==fastapi_webserver.core.app.api.dashboard_API:1864\n==fastapi_webserver.core.app.api.dashboard_API:1959\n==fastapi_webserver.core.app.api.dashboard_API:2087\n==fastapi_webserver.core.app.api.dashboard_API:2122\n==fastapi_webserver.core.app.api.dashboard_API:2206\n==fastapi_webserver.core.app.api.dashboard_API:2248\n==fastapi_webserver.core.app.api.dashboard_API:2432\n==fastapi_webserver.core.app.api.dashboard_API:2556\n==fastapi_webserver.core.app.api.dashboard_API:2601\n==fastapi_webserver.core.app.api.dashboard_API:2643\n==fastapi_webserver.core.app.api.dashboard_API:2685\n==fastapi_webserver.core.app.api.dashboard_API:2728\n==fastapi_webserver.core.app.api.dashboard_API:2769\n==fastapi_webserver.core.app.api.dashboard_API:2811\n==fastapi_webserver.core.app.api.dashboard_API:2845\n==fastapi_webserver.core.app.api.dashboard_API:2877\n==fastapi_webserver.core.app.api.dashboard_API:289\n==fastapi_webserver.core.app.api.dashboard_API:2918\n==fastapi_webserver.core.app.api.dashboard_API:2959\n==fastapi_webserver.core.app.api.dashboard_API:3005\n==fastapi_webserver.core.app.api.dashboard_API:3070\n==fastapi_webserver.core.app.api.dashboard_API:3111\n==fastapi_webserver.core.app.api.dashboard_API:3151\n==fastapi_webserver.core.app.api.dashboard_API:3192\n==fastapi_webserver.core.app.api.dashboard_API:3233\n==fastapi_webserver.core.app.api.dashboard_API:3277\n==fastapi_webserver.core.app.api.dashboard_API:3318\n==fastapi_webserver.core.app.api.dashboard_API:3406\n==fastapi_webserver.core.app.api.dashboard_API:3450\n==fastapi_webserver.core.app.api.dashboard_API:3491\n==fastapi_webserver.core.app.api.dashboard_API:3533\n==fastapi_webserver.core.app.api.dashboard_API:369\n==fastapi_webserver.core.app.api.dashboard_API:410\n==fastapi_webserver.core.app.api.dashboard_API:526\n==fastapi_webserver.core.app.api.dashboard_API:561\n==fastapi_webserver.core.app.api.dashboard_API:595\n==fastapi_webserver.core.app.api.dashboard_API:641\n==fastapi_webserver.core.app.api.dashboard_API:693\n==fastapi_webserver.core.app.api.dashboard_API:738\n==fastapi_webserver.core.app.api.dashboard_API:782\n==fastapi_webserver.core.app.api.dashboard_API:833\n==fastapi_webserver.core.app.api.dashboard_API:878\n==fastapi_webserver.core.app.api.dashboard_API:927\n==fastapi_webserver.core.app.api.dashboard_API:976\n==fastapi_webserver.core.app.api.orchestrator_API:1248\n==fastapi_webserver.core.app.api.reports:130\n==fastapi_webserver.core.app.api.sso:245\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 21 files\n==fastapi_webserver.core.app.api.dashboard_API:3579\n==fastapi_webserver.core.app.api.infracost:41\n==fastapi_webserver.core.app.api.orchestrator_API:1025\n==fastapi_webserver.core.app.api.orchestrator_API:1072\n==fastapi_webserver.core.app.api.orchestrator_API:1201\n==fastapi_webserver.core.app.api.orchestrator_API:1248\n==fastapi_webserver.core.app.api.orchestrator_API:527\n==fastapi_webserver.core.app.api.orchestrator_API:576\n==fastapi_webserver.core.app.api.orchestrator_API:605\n==fastapi_webserver.core.app.api.orchestrator_API:671\n==fastapi_webserver.core.app.api.orchestrator_API:747\n==fastapi_webserver.core.app.api.orchestrator_API:798\n==fastapi_webserver.core.app.api.orchestrator_API:860\n==fastapi_webserver.core.app.api.orchestrator_API:925\n==fastapi_webserver.core.app.api.orchestrator_API:974\n==fastapi_webserver.core.app.api.reports:130\n==fastapi_webserver.core.app.api.reports:59\n==fastapi_webserver.core.app.api.reports:99\n==fastapi_webserver.core.app.api.sso:161\n==fastapi_webserver.core.app.api.sso:204\n==fastapi_webserver.core.app.api.sso:245\n    except ValidationError as excp:\n        json_compatible_resp = jsonable_encoder(excp.errors())\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.cloud_master:122\n==resource_adapters.providers.postprovisioning.operations:83\n            APIConfigurations\n        ).where(\n            APIConfigurations.application_name.__eq__(\n                source\n            )\n        ).where(\n            APIConfigurations.task_name.__eq__(\n                task_name\n            )\n        ).where(\n            APIConfigurations.cloud_provider.__eq__(\n                cloud_provider\n            )\n        ).one()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==consumer.core.app.consumer:20\n==util.core.app.add_default_config:11\n        config_file = os.path.join(os.environ['BASEDIR'],\n                                   'configurations',\n                                   f'{os.environ[\"EXECFILE\"]}.yml')\n        # config_file = \"dev.yml\"\n        if not os.path.exists(config_file):\n            config_file = os.path.join(os.environ['BASEDIR'],\n                                       'core', 'core', 'settings',\n                                       f'{os.environ[\"EXECFILE\"]}.yml')\n        try:\n            with open(config_file, \"r\") as f:\n                config = yaml.safe_load(f)\n        except Exception as ex:\n            raise Exception(\"Config file not found:%s\" % str(ex))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==processor.resources:54\n==util.core.app.resources:11\n        self._engine = create_engine(\n            db_url, pool_size=20, max_overflow=15, echo=False,\n            pool_recycle=300, pool_pre_ping=True, pool_use_lifo=True,\n            connect_args={'options': '-csearch_path={}'.format(db_schema)}\n        )\n        self._session_factory = orm.scoped_session(\n            orm.sessionmaker(\n                autocommit=False,\n                autoflush=False,\n                bind=self._engine,\n            ),\n        )\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.openstack.vmoperations:9\n==resource_adapters.providers.vmware.vmoperations:14\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n\n\ndef start_vm(parameters, session, **kwargs):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.openstack.diskoperations:8\n==resource_adapters.providers.vmware.dcoperations:9\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n\n\ndef delete_disk(parameters, session, **kwargs):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.networkoperations:276\n==resource_adapters.providers.gcp.networkoperations:48\n                add_audit_log(session, task_id, \"NetworkOperations\",\n                              \"delete_public_ip:%s\" % ip_name,\n                              \"Success\", TASK_STATUS.COMPLETED)\n                ips_deleted.append(ip_name)\n            except Exception as ex:\n                ips_failed.append(ip_name)\n                add_audit_log(session, task_id, \"NetworkOperations\",\n                              \"delete_public_ip:%s\" % ip_name,\n                              \"%s\" % str(ex), TASK_STATUS.FAILED)\n        add_audit_log(session, task_id, \"NetworkOperations\",\n                      \"delete_public_ip Ips deleted:%s, Ips failed:%s\" %\n                      (ips_deleted, ips_failed), \"Success\", TASK_STATUS.COMPLETED)\n        if ips_failed:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.dnsoperations:160\n==resource_adapters.providers.azure.privatednsoperations:162\n                        \"started\", TASK_STATUS.COMPLETED)\n    try:\n        zone_info = parameters.get('zone_info')\n    except Exception as ex:\n        raise Exception(\"Zone info is missing:%s\" % str(ex))\n    sets_updated = []\n    sets_failed = []\n    if zone_info:\n        for zone_data in zone_info:\n            set_name = zone_data.get('set_name')\n            try:\n                zone = zone_data.get('zone')\n                set_type = parameters.get('type')",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.dnsoperations:116\n==resource_adapters.providers.azure.privatednsoperations:118\n                        \"started\", TASK_STATUS.COMPLETED)\n    try:\n        zone_info = parameters.get('zone_info')\n    except Exception as ex:\n        raise Exception(\"Zone info is missing:%s\" % str(ex))\n    zones_updated = []\n    zones_failed = []\n    if zone_info:\n        for zone_i in zone_info:\n            zone = zone_i.get('zone_name')\n            try:\n                upd_params = zone_i.get('zone_parameters')\n                LOG.debug(\"Zone Name is:%s\" % zone, {'task_id': task_id})",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 4 files\n==fastapi_webserver.core.app.api.dashboard_API:1712\n==fastapi_webserver.core.app.api.dashboard_API:1901\n==fastapi_webserver.core.app.api.dashboard_API:2002\n==util.core.app.state_response_insert:36\n        _engine = create_engine(\n            db_url, pool_size=20, max_overflow=15, echo=False,\n            pool_recycle=300, pool_pre_ping=True, pool_use_lifo=True,\n            connect_args={'options': '-csearch_path={}'.format(db_schema)}\n        )\n        _session = orm.scoped_session(\n            orm.sessionmaker(\n                autocommit=False,\n                autoflush=False,\n                bind=_engine,\n            ),\n        )\n        #######################################################################",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==fastapi_webserver.core.app.api.dashboard_API:171\n==fastapi_webserver.core.app.api.dashboard_API:263\n==fastapi_webserver.core.app.api.orchestrator_API:651\n                    old_timezone = pytz.timezone('Etc/UTC')\n                    new_timezone = pytz.timezone('Asia/Kolkata')\n                    localized_created_time = old_timezone.localize(d1['created_date'])\n                    new_timezone_created_time = localized_created_time.astimezone(new_timezone)\n                    d1['created_date'] = new_timezone_created_time.strftime(\"%d-%m-%Y %H:%M:%S\")\n                    localized_modified_time = old_timezone.localize(d1['modified_date'])\n                    new_timezone_modified_time = localized_modified_time.astimezone(new_timezone)\n                    d1['modified_date'] = new_timezone_modified_time.strftime(\"%d-%m-%Y %H:%M:%S\")\n\n                    try:\n                        if d1['status'] == 'IN_QUEUE':\n                            d1['identifier'] = 'NA'\n                        else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==util.core.app.audit_log_transaction:41\n==util.core.app.state_response_insert:17\n    if not os.path.exists(config_file):\n        config_file = os.path.join(os.environ['BASEDIR'],\n                                   'core', 'core', 'settings',\n                                   f'{os.environ[\"EXECFILE\"]}.yml')\n\n    print(\"config_file = \" + str(config_file))\n    try:\n        with open(config_file, \"r\") as f:\n            config = yaml.safe_load(f)\n    except Exception as ex:\n        raise Exception(\"Config file not found:%s\" % str(ex))\n    print(\"config = \" + str(config))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 11 files\n==resource_adapters.providers.azure.commonoperations:7\n==resource_adapters.providers.azure.networkoperations:11\n==resource_adapters.providers.openstack.commonoperations:8\n==resource_adapters.providers.openstack.diskoperations:8\n==resource_adapters.providers.openstack.networkoperations:8\n==resource_adapters.providers.openstack.vmoperations:9\n==resource_adapters.providers.postprovisioning.operations:58\n==resource_adapters.providers.storage.nfsoperations:14\n==resource_adapters.providers.storage.smboperations:12\n==resource_adapters.providers.vmware.dcoperations:9\n==resource_adapters.providers.vmware.vmoperations:14\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.openstack.networkoperations:580\n==resource_adapters.providers.openstack.vmoperations:428\n    try:\n        client = get_openstack_client(parameters)\n    except Exception as ex:\n        raise ex\n    ops_failed = []\n    subnet_info = parameters.get('subnet_info')\n    if isinstance(subnet_info, str):\n        subnet_info = [subnet_info]\n    for data in subnet_info:\n        name = data.get('subnet_name')\n        vm_name = data.get('vm_name')",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.dnsoperations:27\n==resource_adapters.providers.azure.privatednsoperations:28\n                        \"started\", TASK_STATUS.COMPLETED)\n    try:\n        zone_info = parameters.get('zone_names')\n    except Exception as ex:\n        raise Exception(\"Zone info is missing:%s\" % str(ex))\n    zones_deleted = []\n    zones_failed = []\n    if zone_info:\n        for zone in zone_info:\n            try:\n                LOG.debug(\"Zone Name is:%s\" % zone, {'task_id': task_id})",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.diskoperations:74\n==resource_adapters.providers.azure.vmoperations:122\n                        'disk_size_gb': disk_info.get('disk_size_GB'),\n                        'sku': {\"name\": disk_info.get('sku'),\n                                \"tier\": disk_info.get('tier', \"P1\")},\n                        'creation_data': {\n                            'create_option': DiskCreateOption.empty\n                        }\n                    }\n                )\n                async_disk_creation.wait()\n                data_disk = async_disk_creation.result()\n                LOG.debug(\"Data disk:%s\" % data_disk, {'task_id': task_id})",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 21 files\n==resource_adapters.providers.azure.commonoperations:7\n==resource_adapters.providers.azure.diskoperations:10\n==resource_adapters.providers.azure.dnsoperations:10\n==resource_adapters.providers.azure.networkoperations:11\n==resource_adapters.providers.azure.privatednsoperations:10\n==resource_adapters.providers.azure.storageoperations:11\n==resource_adapters.providers.azure.vmoperations:11\n==resource_adapters.providers.gcp.commonoperations:9\n==resource_adapters.providers.gcp.diskoperations:10\n==resource_adapters.providers.gcp.networkoperations:8\n==resource_adapters.providers.gcp.vmoperations:9\n==resource_adapters.providers.ipam.vmoperations:22\n==resource_adapters.providers.openstack.commonoperations:8\n==resource_adapters.providers.openstack.diskoperations:8\n==resource_adapters.providers.openstack.networkoperations:8\n==resource_adapters.providers.openstack.vmoperations:9\n==resource_adapters.providers.postprovisioning.operations:58\n==resource_adapters.providers.storage.nfsoperations:14\n==resource_adapters.providers.storage.smboperations:12\n==resource_adapters.providers.vmware.dcoperations:9\n==resource_adapters.providers.vmware.vmoperations:14\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 10 files\n==resource_adapters.providers.azure.diskoperations:10\n==resource_adapters.providers.azure.dnsoperations:10\n==resource_adapters.providers.azure.networkoperations:11\n==resource_adapters.providers.azure.privatednsoperations:10\n==resource_adapters.providers.azure.storageoperations:11\n==resource_adapters.providers.azure.vmoperations:11\n==resource_adapters.providers.gcp.commonoperations:9\n==resource_adapters.providers.gcp.diskoperations:10\n==resource_adapters.providers.gcp.networkoperations:8\n==resource_adapters.providers.gcp.vmoperations:9\ndef add_audit_log(session, task_id, source, event, trace, status):\n    payload = {\n        \"task_id\": task_id,\n        \"source\": source,\n        \"event\": event,\n        \"trace\": trace,\n        \"status\": status\n    }\n    LOG.debug(\"Insert audit logs:%s\" % payload, {'task_id': task_id})\n    insert_audit_log(payload, session_factory=session._session_factory)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.dashboard_API:468\n==fastapi_webserver.core.app.api.orchestrator_API:206\n                sub_plan = sub_plan.execution_plan.get('StateTransition').get(each_external_plan)\n                if not sub_plan:\n                    raise Exception(\"No valid plan exist\")\n                if len(external_plans) > i + 1:\n                    sub_plan[\"success\"] = external_plans[i + 1]\n                else:\n                    sub_plan[\"success\"] = \"EndExecution\"\n                sub_plan[\"failure\"] = \"EndExecution\"\n                logger.debug(\"Sub Plan is:%s\" % sub_plan)\n                plan[\"StateTransition\"][each_external_plan] = sub_plan\n        logger.debug(\"Updated Main plan is:%s\" % plan)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==fastapi_webserver.core.app.api.cloud_master:186\n==util.core.app.cipher_keys:10\n==util.core.app.common:4\n    _tmp = deepcopy(_dict)\n    for key, value in _dict.items():\n        if isinstance(value, dict):\n            _tmp[key] = recr_dict(value, func)\n        elif isinstance(value, str):\n            if key.startswith('__e__'):\n                _value = func(_tmp.pop(key))\n                _tmp[key.strip('__e__')] = _value.strip()\n            else:\n                _tmp[key] = value.strip()\n    return _tmp",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==fastapi_webserver.core.app.api.cloud_master:82\n==resource_adapters.providers.postprovisioning.operations:130\n==resource_adapters.providers.postprovisioning.operations:191\n            cloud_provider=parameters.get('cloud_provider'),\n            source=parameters.get('source'),\n            task_name=func_name,\n            session=session\n        )\n        data = deepcopy(apimeta['request_parameters'])\n        for key, value in apimeta['request_parameters_map'].items():\n            tmp = deepcopy(parameters)\n            for val in value:\n                tmp = tmp[val]\n            data[key] = tmp",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==processor.resources:67\n==util.core.app.resources:25\n    @contextmanager\n    def session(self):\n        session: Session = self._session_factory()\n        try:\n            yield session\n        except Exception:\n            session.rollback()\n            raise\n        finally:\n            session.close()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.utils.azure_clients:1\n==resource_adapters.utils.clients:2\nfrom azure.identity import ClientSecretCredential\nfrom azure.common.credentials import ServicePrincipalCredentials\nfrom azure.mgmt.compute import ComputeManagementClient\nfrom azure.mgmt.network import NetworkManagementClient\nfrom azure.mgmt.storage import StorageManagementClient\nfrom azure.mgmt.privatedns import PrivateDnsManagementClient\nfrom azure.mgmt.dns import DnsManagementClient\nfrom azure.storage.blob import BlobServiceClient\nfrom azure.storage.queue import QueueServiceClient\nfrom azure.mgmt.datalake.store import DataLakeStoreAccountManagementClient",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.reports:0\n==fastapi_webserver.core.app.api.sso:0\nimport json\nimport os\nimport urllib\nfrom urllib.parse import urlparse, parse_qsl, urlencode\n\nimport yaml\nimport logging\n\nfrom cryptography.fernet import Fernet\nfrom typing import Optional",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.dashboard_API:455\n==fastapi_webserver.core.app.api.orchestrator_API:193\n        plan = plan.execution_plan\n\n        logger.debug(\"Main plan is:%s\" % plan)\n        external_plans = None\n        if 'external_plans' in plan.get('StateTransition'):\n            external_plans = plan.get('StateTransition').pop('external_plans')\n        if external_plans:\n            for i in range(len(external_plans)):\n                each_external_plan = external_plans[i]\n                task_type = auto_action_service.fetch(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.dashboard_API:88\n==fastapi_webserver.core.app.api.orchestrator_API:71\ndef insert_config_audit_log(config_name, value, Operation, created_by, modified_by):\n    \"\"\"\n    function to create config audit payload log\n    \"\"\"\n    payload = {\n        \"config_name\": config_name,\n        \"config_value\": value,\n        \"operation_name\": Operation,\n        \"created_by\": created_by,\n        \"modified_by\": modified_by",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 84 files\n==fastapi_webserver.core.app.api.cloud_master:64\n==fastapi_webserver.core.app.api.dashboard_API:1039\n==fastapi_webserver.core.app.api.dashboard_API:1105\n==fastapi_webserver.core.app.api.dashboard_API:1138\n==fastapi_webserver.core.app.api.dashboard_API:1199\n==fastapi_webserver.core.app.api.dashboard_API:1250\n==fastapi_webserver.core.app.api.dashboard_API:1295\n==fastapi_webserver.core.app.api.dashboard_API:1337\n==fastapi_webserver.core.app.api.dashboard_API:1384\n==fastapi_webserver.core.app.api.dashboard_API:1420\n==fastapi_webserver.core.app.api.dashboard_API:1453\n==fastapi_webserver.core.app.api.dashboard_API:1531\n==fastapi_webserver.core.app.api.dashboard_API:1678\n==fastapi_webserver.core.app.api.dashboard_API:1870\n==fastapi_webserver.core.app.api.dashboard_API:1965\n==fastapi_webserver.core.app.api.dashboard_API:200\n==fastapi_webserver.core.app.api.dashboard_API:2093\n==fastapi_webserver.core.app.api.dashboard_API:2128\n==fastapi_webserver.core.app.api.dashboard_API:2153\n==fastapi_webserver.core.app.api.dashboard_API:2177\n==fastapi_webserver.core.app.api.dashboard_API:2212\n==fastapi_webserver.core.app.api.dashboard_API:2254\n==fastapi_webserver.core.app.api.dashboard_API:2292\n==fastapi_webserver.core.app.api.dashboard_API:2316\n==fastapi_webserver.core.app.api.dashboard_API:2341\n==fastapi_webserver.core.app.api.dashboard_API:2369\n==fastapi_webserver.core.app.api.dashboard_API:2394\n==fastapi_webserver.core.app.api.dashboard_API:2438\n==fastapi_webserver.core.app.api.dashboard_API:2465\n==fastapi_webserver.core.app.api.dashboard_API:2492\n==fastapi_webserver.core.app.api.dashboard_API:2519\n==fastapi_webserver.core.app.api.dashboard_API:2562\n==fastapi_webserver.core.app.api.dashboard_API:2607\n==fastapi_webserver.core.app.api.dashboard_API:2649\n==fastapi_webserver.core.app.api.dashboard_API:2691\n==fastapi_webserver.core.app.api.dashboard_API:2734\n==fastapi_webserver.core.app.api.dashboard_API:2775\n==fastapi_webserver.core.app.api.dashboard_API:2817\n==fastapi_webserver.core.app.api.dashboard_API:2851\n==fastapi_webserver.core.app.api.dashboard_API:2883\n==fastapi_webserver.core.app.api.dashboard_API:2924\n==fastapi_webserver.core.app.api.dashboard_API:295\n==fastapi_webserver.core.app.api.dashboard_API:2965\n==fastapi_webserver.core.app.api.dashboard_API:3011\n==fastapi_webserver.core.app.api.dashboard_API:3076\n==fastapi_webserver.core.app.api.dashboard_API:3117\n==fastapi_webserver.core.app.api.dashboard_API:3157\n==fastapi_webserver.core.app.api.dashboard_API:3198\n==fastapi_webserver.core.app.api.dashboard_API:3239\n==fastapi_webserver.core.app.api.dashboard_API:3283\n==fastapi_webserver.core.app.api.dashboard_API:3324\n==fastapi_webserver.core.app.api.dashboard_API:3412\n==fastapi_webserver.core.app.api.dashboard_API:3456\n==fastapi_webserver.core.app.api.dashboard_API:3497\n==fastapi_webserver.core.app.api.dashboard_API:3539\n==fastapi_webserver.core.app.api.dashboard_API:375\n==fastapi_webserver.core.app.api.dashboard_API:416\n==fastapi_webserver.core.app.api.dashboard_API:532\n==fastapi_webserver.core.app.api.dashboard_API:567\n==fastapi_webserver.core.app.api.dashboard_API:601\n==fastapi_webserver.core.app.api.dashboard_API:647\n==fastapi_webserver.core.app.api.dashboard_API:699\n==fastapi_webserver.core.app.api.dashboard_API:744\n==fastapi_webserver.core.app.api.dashboard_API:788\n==fastapi_webserver.core.app.api.dashboard_API:839\n==fastapi_webserver.core.app.api.dashboard_API:884\n==fastapi_webserver.core.app.api.dashboard_API:933\n==fastapi_webserver.core.app.api.dashboard_API:982\n==fastapi_webserver.core.app.api.orchestrator_API:1031\n==fastapi_webserver.core.app.api.orchestrator_API:1078\n==fastapi_webserver.core.app.api.orchestrator_API:1207\n==fastapi_webserver.core.app.api.orchestrator_API:533\n==fastapi_webserver.core.app.api.orchestrator_API:582\n==fastapi_webserver.core.app.api.orchestrator_API:611\n==fastapi_webserver.core.app.api.orchestrator_API:677\n==fastapi_webserver.core.app.api.orchestrator_API:753\n==fastapi_webserver.core.app.api.orchestrator_API:804\n==fastapi_webserver.core.app.api.orchestrator_API:866\n==fastapi_webserver.core.app.api.orchestrator_API:931\n==fastapi_webserver.core.app.api.orchestrator_API:980\n==fastapi_webserver.core.app.api.reports:105\n==fastapi_webserver.core.app.api.reports:65\n==fastapi_webserver.core.app.api.sso:167\n==fastapi_webserver.core.app.api.sso:210\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==fastapi_webserver.core.app.api.dashboard_API:110\n==fastapi_webserver.core.app.repositories:289\n==util.core.app.repositories:63\n                    row = filter_query.one()\n                    if row:\n                        for column, value in kwargs.items():\n                            setattr(row, column, value)\n                        session.add(row)\n                        session.commit()\n                        session.refresh(row)\n                        return row\n                except sqexcp.NoResultFound as excp:\n                    pass",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 4 files\n==util.core.app.audit_log_transaction:65\n==util.core.app.config_audit:9\n==util.core.app.state_response_insert:13\n==util.core.app.validate_license:21\n        config_file = os.path.join(os.environ['BASEDIR'],\n                                   'configurations',\n                                   f'{os.environ[\"EXECFILE\"]}.yml')\n        # config_file = \"dev.yml\"\n        if not os.path.exists(config_file):\n            config_file = os.path.join(os.environ['BASEDIR'],\n                                       'core', 'core', 'settings',\n                                       f'{os.environ[\"EXECFILE\"]}.yml')\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==util.core.app.add_default_config:10\n==util.core.app.audit_log_transaction:64\n==util.core.app.config_audit:8\n    if not session_factory:\n        config_file = os.path.join(os.environ['BASEDIR'],\n                                   'configurations',\n                                   f'{os.environ[\"EXECFILE\"]}.yml')\n        # config_file = \"dev.yml\"\n        if not os.path.exists(config_file):\n            config_file = os.path.join(os.environ['BASEDIR'],\n                                       'core', 'core', 'settings',\n                                       f'{os.environ[\"EXECFILE\"]}.yml')",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==processor.askpass:10\n==util.core.app.terraform_resource:34\nif 'username' in argv[1].lower():\n    print(environ['GIT_USERNAME'])\n    exit()\n\nif 'password' in argv[1].lower():\n    print(environ['GIT_PASSWORD'])\n    exit()\n\nexit(1)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==fastapi_webserver.core.app.api.dashboard_API:724\n==fastapi_webserver.core.app.api.reports:87\n==fastapi_webserver.core.app.api.sso:192\n        if len(creds) == 0:\n            response = JSONResponse(content=jsonable_encoder({}))\n            return response\n        resp = {_col: getattr(creds[0], _col) for _col in creds[0].__table__.columns.keys()}\n        try:\n            del resp['created_date']\n            del resp['modified_date']\n        except:  # pylint: disable=bare-except\n            pass",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==fastapi_webserver.core.app.api.dashboard_API:2708\n==fastapi_webserver.core.app.api.dashboard_API:3556\n==fastapi_webserver.core.app.api.orchestrator_API:629\n        page_no: Optional[int] = 1,\n        per_page: Optional[int] = 5\n):\n    \"\"\"\n            function to get all category\n        \"\"\"\n    try:\n        filters = {}\n        resp = {}",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.cloud_master:152\n==resource_adapters.providers.postprovisioning.operations:109\n    elif method == 'POST':\n        resp = requests.post(url, headers=headers, data=json.dumps(data),\n                             verify=False)\n    elif method == 'PUT':\n        resp = requests.put(url, headers=headers, data=json.dumps(data),\n                            verify=False)\n    return resp\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 12 files\n==fastapi_webserver.core.app.api.cloud_master:64\n==fastapi_webserver.core.app.api.dashboard_API:2153\n==fastapi_webserver.core.app.api.dashboard_API:2177\n==fastapi_webserver.core.app.api.dashboard_API:2292\n==fastapi_webserver.core.app.api.dashboard_API:2316\n==fastapi_webserver.core.app.api.dashboard_API:2341\n==fastapi_webserver.core.app.api.dashboard_API:2369\n==fastapi_webserver.core.app.api.dashboard_API:2394\n==fastapi_webserver.core.app.api.dashboard_API:2465\n==fastapi_webserver.core.app.api.dashboard_API:2492\n==fastapi_webserver.core.app.api.dashboard_API:2519\n==fastapi_webserver.core.app.api.infracost:47\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 6 files\n==consumer.core.app.consumer:20\n==util.core.app.add_default_config:11\n==util.core.app.audit_log_transaction:65\n==util.core.app.config_audit:9\n==util.core.app.state_response_insert:13\n==util.core.app.validate_license:21\n    config_file = os.path.join(os.environ['BASEDIR'],\n                               'configurations',\n                               f'{os.environ[\"EXECFILE\"]}.yml')\n    #config_file = \"dev.yml\"\n    if not os.path.exists(config_file):\n        config_file = os.path.join(os.environ['BASEDIR'],\n                                   'core', 'core', 'settings',\n                                   f'{os.environ[\"EXECFILE\"]}.yml')",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==resource_adapters.providers.openstack.networkoperations:366\n==resource_adapters.providers.openstack.networkoperations:398\n==resource_adapters.providers.openstack.vmoperations:428\n    try:\n        client = get_openstack_client(parameters)\n    except Exception as ex:\n        raise ex\n    ops_failed = []\n    subnet_info = parameters.get('subnet_info')\n    if isinstance(subnet_info, str):\n        subnet_info = [subnet_info]",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.vmoperations:95\n==resource_adapters.providers.gcp.vmoperations:187\n    if isinstance(vm_list, str):\n        vm_list = [vm_list]\n    data_disk_info = parameters.get(\"data_disk_info\")\n    for vm_name in vm_list:\n        index = vm_list.index(vm_name)\n        add_audit_log(session, task_id, \"VmOperation\", \"add_disk:%s\" % vm_name,\n                      \"started\", TASK_STATUS.COMPLETED)\n        if data_disk_info:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.core.resources:9\n==util.core.app.resources:8\nclass DatabaseResource:\n\n    def __init__(self, db_url: str,db_schema:str) -> None:\n        self._engine = create_engine(\n            db_url, pool_size=20, max_overflow=15, echo=False,\n            pool_recycle=300, pool_pre_ping=True, pool_use_lifo=True,\n            connect_args={'options': '-csearch_path={}'.format(db_schema)}\n        )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.core.resources:18\n==processor.resources:59\n        self._session_factory = orm.scoped_session(\n            orm.sessionmaker(\n                autocommit=False,\n                autoflush=False,\n                bind=self._engine,\n            ),\n        )\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 15 files\n==fastapi_webserver.core.app.api.cloud_master:64\n==fastapi_webserver.core.app.api.dashboard_API:2153\n==fastapi_webserver.core.app.api.dashboard_API:2177\n==fastapi_webserver.core.app.api.dashboard_API:2292\n==fastapi_webserver.core.app.api.dashboard_API:2316\n==fastapi_webserver.core.app.api.dashboard_API:2341\n==fastapi_webserver.core.app.api.dashboard_API:2369\n==fastapi_webserver.core.app.api.dashboard_API:2394\n==fastapi_webserver.core.app.api.dashboard_API:2465\n==fastapi_webserver.core.app.api.dashboard_API:2492\n==fastapi_webserver.core.app.api.dashboard_API:2519\n==fastapi_webserver.core.app.api.dashboard_API:3585\n==fastapi_webserver.core.app.api.orchestrator_API:1254\n==fastapi_webserver.core.app.api.reports:136\n==fastapi_webserver.core.app.api.sso:251\n    except Exception as excp:\n        logger.exception(excp)\n        json_compatible_resp = jsonable_encoder(dict(error=excp.__str__()))\n        response = JSONResponse(\n            status_code=500,\n            content=json_compatible_resp\n        )\n    return response",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 6 files\n==resource_adapters.utils.azure_clients:15\n==resource_adapters.utils.clients:115\n==resource_adapters.utils.clients:23\n==resource_adapters.utils.clients:36\n==resource_adapters.utils.clients:49\n==resource_adapters.utils.clients:62\n    tenant_id = parameters.get('azure_tenant_id')\n    client_id = parameters.get('azure_client_id')\n    secret = parameters.get('azure_client_secret')\n    subscription_id = parameters.get('azure_subscription_id')\n\n    token_credential = ClientSecretCredential(\n        tenant_id, client_id, secret)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 6 files\n==resource_adapters.providers.vmware.dcoperations:120\n==resource_adapters.providers.vmware.dcoperations:239\n==resource_adapters.providers.vmware.dcoperations:290\n==resource_adapters.providers.vmware.dcoperations:349\n==resource_adapters.providers.vmware.dcoperations:72\n==resource_adapters.providers.vmware.vmoperations:999\n    add_audit_log(session, task_id, f\"{_module_name}\",\n                  f\"{_function_name}\", f\"Started: with PARAMETERS:{parameters}\", TASK_STATUS.COMPLETED)\n\n    compute_client = get_vmware_client(parameters)\n    content = compute_client.content\n    exception_list = []\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 5 files\n==resource_adapters.providers.storage.nfsoperations:237\n==resource_adapters.providers.vmware.dcoperations:267\n==resource_adapters.providers.vmware.dcoperations:328\n==resource_adapters.providers.vmware.dcoperations:379\n==resource_adapters.providers.vmware.vmoperations:750\n            add_audit_log(session, task_id, f\"{_module_name}\",\n                          f\"{_function_name}\", _exception_msg, TASK_STATUS.FAILED)\n\n    if exception_list:\n        add_audit_log(session, task_id, f\"{_module_name}\", f\"{_function_name}\",\n                      f\"Failed With Error: {exception_list}\", TASK_STATUS.FAILED)\n        raise Exception(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==resource_adapters.providers.postprovisioning.operations:71\n==resource_adapters.providers.storage.nfsoperations:27\n==resource_adapters.providers.storage.smboperations:25\n    payload = {\n        \"name\": name,\n        \"data\": data\n    }\n    LOG.debug(\"Insert State Response:%s\" % payload, {'task_id': task_id})\n    insert_state_response(payload)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.core.resources:27\n==processor.resources:67\n    @contextmanager\n    def session(self):\n        session: Session = self._session_factory()\n        try:\n            yield session\n        except Exception:\n            session.rollback()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.utils.clients:16\n==resource_adapters.utils.gcp_clients:1\nfrom google.oauth2 import service_account\nfrom google.cloud import compute_v1\nfrom google.cloud.compute import AddressesClient, FirewallsClient,\\\n    NetworksClient, SubnetworksClient\nfrom google.cloud.compute import ImagesClient\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 7 files\n==resource_adapters.providers.storage.nfsoperations:181\n==resource_adapters.providers.storage.nfsoperations:356\n==resource_adapters.providers.vmware.dcoperations:218\n==resource_adapters.providers.vmware.dcoperations:99\n==resource_adapters.providers.vmware.vmoperations:1054\n==resource_adapters.providers.vmware.vmoperations:931\n==resource_adapters.providers.vmware.vmoperations:976\n            add_audit_log(session, task_id, f\"{_module_name}\",\n                          f\"{_function_name}\", _exception_msg, TASK_STATUS.FAILED)\n    if exception_list:\n        add_audit_log(session, task_id, f\"{_module_name}\", f\"{_function_name}\",\n                      f\"Failed With Error: {exception_list}\", TASK_STATUS.FAILED)\n        raise Exception(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.gcp.diskoperations:0\n==resource_adapters.providers.gcp.vmoperations:0\nfrom random import randint\nfrom util.core.app.audit_log_transaction import insert_audit_log\nfrom util.core.app.constants import TASK_STATUS\nfrom util.core.app.terraform_resource import TerraformClass\nfrom google.cloud import compute_v1\nfrom resource_adapters.utils.gcp_clients import *",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.vmoperations:342\n==resource_adapters.providers.gcp.vmoperations:492\n    for vm_name in vm_list:\n        add_audit_log(session, task_id, \"VmOperation\", \"add_ip_to_nic:%s\" % vm_name,\n                      \"started\", TASK_STATUS.COMPLETED)\n        for ip_config in ip_config_info:\n            nic_name = ip_config.get('nic_name')\n            subnet = ip_config.get('subnet')",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 4 files\n==resource_adapters.providers.azure.vmoperations:333\n==resource_adapters.providers.azure.vmoperations:408\n==resource_adapters.providers.gcp.vmoperations:486\n==resource_adapters.providers.gcp.vmoperations:552\n    if isinstance(vm_list, str):\n        vm_list = [vm_list]\n    try:\n        ip_config_info = parameters.get('ip_config_info')\n    except Exception as ex:\n        raise Exception(\"Ip configuration is missing:%s\" % str(ex))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.vmoperations:229\n==resource_adapters.providers.gcp.vmoperations:418\n                          \"Success\", TASK_STATUS.COMPLETED)\n            if ids:\n                tf_obj = TerraformClass(config=kwargs.get('config'), db_conn=session,\n                                        task_id=task_id, env_vars=kwargs.get('env_vars'))\n                tf_obj(state=\"add_disk\", payload=parameters, resource_ids=ids,\n                       index=index)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.vmoperations:154\n==resource_adapters.providers.gcp.vmoperations:332\n            if ids:\n                tf_obj = TerraformClass(config=kwargs.get('config'), db_conn=session,\n                                        task_id=task_id, env_vars=kwargs.get('env_vars'))\n                tf_obj(state=\"add_disk\", payload=parameters, resource_ids=ids,\n                       index=index)\n        else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.networkoperations:291\n==resource_adapters.providers.gcp.networkoperations:62\n                          \"Failed\", TASK_STATUS.FAILED)\n            raise Exception('Following ops failed {}'.format(ips_failed))\n    else:\n        add_audit_log(session, task_id, \"NetworkOperations\", \"delete_public_ip\",\n                      \"No IP information in the request\", TASK_STATUS.COMPLETED)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 6 files\n==fastapi_webserver.core.app.api.dashboard_API:2951\n==fastapi_webserver.core.app.api.dashboard_API:3184\n==fastapi_webserver.core.app.api.dashboard_API:3310\n==fastapi_webserver.core.app.api.dashboard_API:3483\n==fastapi_webserver.core.app.api.reports:91\n==fastapi_webserver.core.app.api.sso:196\n        try:\n            del resp['created_date']\n            del resp['modified_date']\n        except:\n            pass\n        # insert_config_audit_log('OAuth', resp, 'DELETE', modified_by, modified_by)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.service:27\n==processor.service:29\nmainparser = argparse.ArgumentParser()\nservice_subparsers = mainparser.add_subparsers(dest='action')\n\nworker_parser = service_subparsers.add_parser('startworker',\n                                              help='Command to start worker. Provide appropirate flags for worker',\n                                              parents=[parent_parser])",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==util.core.app.audit_log_transaction:0\n==util.core.app.config_audit:0\nimport os\nimport yaml\nfrom .resources import DatabaseResource\nfrom .repositories import CommonRepository\nfrom .services import CommonService",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 7 files\n==consumer.core.app.consumer:28\n==util.core.app.add_default_config:19\n==util.core.app.audit_log_transaction:47\n==util.core.app.audit_log_transaction:75\n==util.core.app.config_audit:19\n==util.core.app.state_response_insert:23\n==util.core.app.validate_license:30\n            try:\n                with open(config_file, \"r\") as f:\n                    config = yaml.safe_load(f)\n            except Exception as ex:\n                raise Exception(\"Config file not found:%s\" % str(ex))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.vmware.dcoperations:0\n==resource_adapters.providers.vmware.vmoperations:0\nfrom util.core.app.audit_log_transaction import insert_audit_log\nfrom util.core.app.constants import TASK_STATUS\nfrom resource_adapters.utils.vmware_clients import get_vmware_client\nimport resource_adapters.providers.vmware.commonoperations as vmware_commonoperations\nfrom pyVmomi import vim",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 5 files\n==resource_adapters.providers.storage.nfsoperations:181\n==resource_adapters.providers.storage.nfsoperations:356\n==resource_adapters.providers.vmware.dcoperations:218\n==resource_adapters.providers.vmware.dcoperations:99\n==resource_adapters.providers.vmware.vmoperations:662\n            add_audit_log(session, task_id, f\"{_module_name}\",\n                          f\"{_function_name}\", _exception_msg, TASK_STATUS.FAILED)\n    if exception_list:\n        add_audit_log(session, task_id, f\"{_module_name}\", f\"{_function_name}\",\n                      f\"Failed With Error: {exception_list}\", TASK_STATUS.FAILED)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 5 files\n==resource_adapters.providers.openstack.networkoperations:505\n==resource_adapters.providers.openstack.networkoperations:592\n==resource_adapters.providers.openstack.vmoperations:440\n==resource_adapters.providers.openstack.vmoperations:481\n==resource_adapters.providers.openstack.vmoperations:518\n                    \"started\", TASK_STATUS.COMPLETED)\n        try:\n            server = client.get_server(vm_name)\n            if server is None:\n                raise Exception('Server with name {} does not exist'.format(vm_name))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 31 files\n==resource_adapters.providers.openstack.commonoperations:132\n==resource_adapters.providers.openstack.commonoperations:164\n==resource_adapters.providers.openstack.commonoperations:196\n==resource_adapters.providers.openstack.commonoperations:23\n==resource_adapters.providers.openstack.commonoperations:55\n==resource_adapters.providers.openstack.commonoperations:87\n==resource_adapters.providers.openstack.networkoperations:113\n==resource_adapters.providers.openstack.networkoperations:189\n==resource_adapters.providers.openstack.networkoperations:221\n==resource_adapters.providers.openstack.networkoperations:23\n==resource_adapters.providers.openstack.networkoperations:289\n==resource_adapters.providers.openstack.networkoperations:366\n==resource_adapters.providers.openstack.networkoperations:398\n==resource_adapters.providers.openstack.networkoperations:430\n==resource_adapters.providers.openstack.networkoperations:461\n==resource_adapters.providers.openstack.networkoperations:493\n==resource_adapters.providers.openstack.networkoperations:52\n==resource_adapters.providers.openstack.networkoperations:580\n==resource_adapters.providers.openstack.networkoperations:666\n==resource_adapters.providers.openstack.networkoperations:81\n==resource_adapters.providers.openstack.vmoperations:113\n==resource_adapters.providers.openstack.vmoperations:188\n==resource_adapters.providers.openstack.vmoperations:222\n==resource_adapters.providers.openstack.vmoperations:24\n==resource_adapters.providers.openstack.vmoperations:263\n==resource_adapters.providers.openstack.vmoperations:323\n==resource_adapters.providers.openstack.vmoperations:355\n==resource_adapters.providers.openstack.vmoperations:428\n==resource_adapters.providers.openstack.vmoperations:468\n==resource_adapters.providers.openstack.vmoperations:506\n==resource_adapters.providers.openstack.vmoperations:69\n    try:\n        client = get_openstack_client(parameters)\n    except Exception as ex:\n        raise ex\n    ops_failed = []",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.gcp.diskoperations:57\n==resource_adapters.providers.gcp.vmoperations:263\n                              \"Success\", TASK_STATUS.COMPLETED)\n                response = disk_client.get(\n                    project=parameters.get('gcp_project'),\n                    zone=parameters.get('zone'),\n                    disk=disk_name)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 4 files\n==resource_adapters.providers.gcp.commonoperations:0\n==resource_adapters.providers.gcp.diskoperations:1\n==resource_adapters.providers.gcp.networkoperations:0\n==resource_adapters.providers.gcp.vmoperations:1\nfrom util.core.app.audit_log_transaction import insert_audit_log\nfrom util.core.app.constants import TASK_STATUS\nfrom util.core.app.terraform_resource import TerraformClass\nfrom google.cloud import compute_v1\nfrom resource_adapters.utils.gcp_clients import *",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.vmoperations:417\n==resource_adapters.providers.gcp.vmoperations:558\n    for vm_name in vm_list:\n        add_audit_log(session, task_id, \"VmOperation\", \"remove_ip_from_nic:%s\" % vm_name,\n                      \"started\", TASK_STATUS.COMPLETED)\n        for ip_config in ip_config_info:\n            nic_name = ip_config.get('nic_name')",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==resource_adapters.providers.azure.vmoperations:154\n==resource_adapters.providers.gcp.vmoperations:270\n==resource_adapters.providers.gcp.vmoperations:419\n            if ids:\n                tf_obj = TerraformClass(config=kwargs.get('config'), db_conn=session,\n                                        task_id=task_id, env_vars=kwargs.get('env_vars'))\n                tf_obj(state=\"add_disk\", payload=parameters, resource_ids=ids,\n                       index=index)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.vmoperations:78\n==resource_adapters.providers.gcp.vmoperations:84\n    if isinstance(vm_list, str):\n        vm_list = [vm_list]\n    for vm_name in vm_list:\n        add_audit_log(session, task_id, \"VmOperation\", \"delete_vm:%s\" % vm_name,\n                      \"started\", TASK_STATUS.COMPLETED)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==resource_adapters.providers.azure.vmoperations:45\n==resource_adapters.providers.gcp.vmoperations:54\n==resource_adapters.providers.openstack.vmoperations:75\n    if isinstance(vm_list, str):\n        vm_list = [vm_list]\n    for vm_name in vm_list:\n        add_audit_log(session, task_id, \"VmOperation\", \"stop_vm:%s\" % vm_name,\n                        \"started\", TASK_STATUS.COMPLETED)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==resource_adapters.providers.azure.vmoperations:28\n==resource_adapters.providers.gcp.vmoperations:26\n==resource_adapters.providers.openstack.vmoperations:30\n    if isinstance(vm_list, str):\n        vm_list = [vm_list]\n    for vm_name in vm_list:\n        add_audit_log(session, task_id, \"VmOperation\", \"start_vm:%s\" % vm_name,\n                      \"started\", TASK_STATUS.COMPLETED)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.networkoperations:647\n==resource_adapters.providers.gcp.networkoperations:121\n    add_audit_log(session, task_id, \"NetworkOperations\", \"delete_subnet\",\n                  \"started\", TASK_STATUS.COMPLETED)\n    try:\n        subnet_config_info = parameters.get('subnet_config_info')\n    except Exception as ex:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.networkoperations:600\n==resource_adapters.providers.gcp.networkoperations:74\n    add_audit_log(session, task_id, \"NetworkOperations\", \"delete_vnet\",\n                  \"started\", TASK_STATUS.COMPLETED)\n    try:\n        vnet_config_info = parameters.get('vnet_config_info')\n    except Exception as ex:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.networkoperations:576\n==resource_adapters.providers.gcp.networkoperations:195\n                              \"Success\", TASK_STATUS.COMPLETED)\n                rules_deleted.append(fw_name)\n            except Exception as ex:\n                rules_failed.append(fw_name)\n                add_audit_log(session, task_id, \"NetworkOperations\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==resource_adapters.providers.azure.networkoperations:560\n==resource_adapters.providers.gcp.networkoperations:178\n    rules_deleted = []\n    rules_failed = []\n    if firewall_config_info:\n        for fw_name in firewall_config_info:\n            try:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==resource_adapters.providers.azure.dnsoperations:116\n==resource_adapters.providers.azure.dnsoperations:160\n==resource_adapters.providers.azure.privatednsoperations:71\n                        \"started\", TASK_STATUS.COMPLETED)\n    try:\n        zone_info = parameters.get('zone_info')\n    except Exception as ex:\n        raise Exception(\"Zone info is missing:%s\" % str(ex))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 5 files\n==resource_adapters.providers.azure.dnsoperations:116\n==resource_adapters.providers.azure.dnsoperations:160\n==resource_adapters.providers.azure.dnsoperations:68\n==resource_adapters.providers.azure.privatednsoperations:118\n==resource_adapters.providers.azure.privatednsoperations:162\n                        \"started\", TASK_STATUS.COMPLETED)\n    try:\n        zone_info = parameters.get('zone_info')\n    except Exception as ex:\n        raise Exception(\"Zone info is missing:%s\" % str(ex))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 3 files\n==resource_adapters.providers.azure.diskoperations:86\n==resource_adapters.providers.azure.vmoperations:229\n==resource_adapters.providers.gcp.vmoperations:418\n                          \"Success\", TASK_STATUS.COMPLETED)\n            if ids:\n                tf_obj = TerraformClass(config=kwargs.get('config'), db_conn=session,\n                                        task_id=task_id, env_vars=kwargs.get('env_vars'))\n                tf_obj(state=\"add_disk\", payload=parameters, resource_ids=ids,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.core.app.api.infracost:9\n==fastapi_webserver.core.app.api.orchestrator_API:2\nfrom fastapi.encoders import jsonable_encoder\nfrom fastapi.responses import JSONResponse\nfrom fastapi_versioning import version\nfrom dependency_injector.wiring import inject, Provide\nfrom pydantic import ValidationError",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 10 files\n==fastapi_webserver.core.app.api.dashboard_API:1018\n==fastapi_webserver.core.app.api.dashboard_API:1072\n==fastapi_webserver.core.app.api.dashboard_API:1086\n==fastapi_webserver.core.app.api.dashboard_API:1279\n==fastapi_webserver.core.app.api.dashboard_API:2677\n==fastapi_webserver.core.app.api.dashboard_API:2803\n==fastapi_webserver.core.app.api.dashboard_API:3525\n==fastapi_webserver.core.app.api.dashboard_API:868\n==fastapi_webserver.core.app.api.reports:91\n==fastapi_webserver.core.app.api.sso:196\n        try:\n            del resp['created_date']\n            del resp['modified_date']\n        except:  # pylint: disable=bare-except\n            pass",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "util.core.app.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "path": "util\\core\\app\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==fastapi_webserver.service:20\n==processor.service:21\nparent_parser = argparse.ArgumentParser(add_help=False)\nparent_parser.add_argument(\"-r\", \"--release\",\n                           help=\"Input release enviorment of server - This must match with the `.yml` file present in \"\n                                \"configurations folder\",\n                           default='local')",
        "message-id": "R0801"
    }
]
